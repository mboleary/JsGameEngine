/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/game/BoxMovement.js":
/*!*********************************!*\
  !*** ./src/game/BoxMovement.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BoxMovementBehavior)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Transform.js */ \"../../packages/jsge-core/src/Transform.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/**\n * Moves the GameObject in a box\n */\n\n// import Script from \"../engine/Script.js\";\n// import Transform from \"../engine/Transform.js\";\n// import { deltaTime } from \"../engine/Engine.js\";\n\n\n\n\n\nconst MOE = 0.001; // Margin of Error\n\nclass BoxMovementBehavior extends _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        \n        this.xChange = 1000;\n        this.yChange = 1000;\n        this.speed = 0.5; // Pixels per frame\n    }\n\n    init() {\n        let t = new _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        t.deepCopy(this.gameObject.transform);\n        this.startPoint = t.position;\n    }\n\n    loop() {\n        const p = this.gameObject.transform.position;\n        const amt = this.speed * _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime;\n        // p.x += amt;\n        // p.y += amt * 0.5;\n        // console.log()\n        if (p.x < this.startPoint.x + this.xChange && p.y - this.startPoint.y <= MOE) {\n            p.y = this.startPoint.y;\n            p.x += amt;\n        } else if (p.x >= this.startPoint.x + this.xChange && p.y < this.startPoint.y + this.xChange) { \n            p.x = this.startPoint.x + this.xChange; // Prevent Errors\n            p.y += amt;\n        } else if (p.x - this.startPoint.x >= MOE && p.y >= this.startPoint.y + this.yChange) {\n            p.y = this.startPoint.y + this.yChange; // Prevent Errors\n            p.x -= amt;\n        } else if (p.x - this.startPoint.x <= MOE && p.y - this.startPoint.y >= MOE) {\n            p.x = this.startPoint.x;\n            p.y -= amt;\n        }\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/game/BoxMovement.js?");

/***/ }),

/***/ "./src/game/ControllerTest2.js":
/*!*************************************!*\
  !*** ./src/game/ControllerTest2.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ControllerTest2),\n/* harmony export */   \"stateUpdater\": () => (/* binding */ stateUpdater)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Transform.js */ \"../../packages/jsge-core/src/Transform.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Serialize.js */ \"../../packages/jsge-core/src/Serialize.js\");\n/* harmony import */ var _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-input/src/Input.js */ \"../../packages/jsge-module-input/src/Input.js\");\n/* harmony import */ var _node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../node_modules/asset-loader/src/AssetLoader.js */ \"../../packages/asset-loader/src/AssetLoader.js\");\n// import GameObject from '../engine/GameObject.js';\n// import { GameObjectWithScript } from '../engine/Script.js';\n\n// import { enrollGameObject, deleteGameObject, deltaTime, TARGET_MILLIS_PER_FRAME } from '../engine/Engine.js';\n\n// import Animation from '../engine/Animation.js';\n\n// import Transform from '../engine/Transform.js';\n\n// import { makeSerializable } from '../engine/Serialize.js';\n\n// import { getKeyState } from '../engine/Input.js';\n\n// import { asset, load } from '../engine/Asset/AssetLoader.js';\n\n\n\n\n\n\n\n\n\nclass ControllerTest2 extends (0,_node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__.GameObjectWithScript)(_node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    constructor() {\n        super();\n        this.movementAmt = 5;\n        this.transform.scale.x = 2;\n        this.transform.scale.y = 2;\n        (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__.load)({\n            name: \"PLAYER\",\n            path: \"/asset/fp/Ship.png\",\n            type: \"image\"\n        });\n        (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__.asset)(\"PLAYER\").then((img) => {\n            this.texture = img;\n            // `spritesheet` is the imported spritesheet\n            // let frames = [];\n            // frames.push(spriteSheet.sheet.get(\"parakoopa_1\"));\n            // frames.push(spriteSheet.sheet.get(\"parakoopa_2\"));\n            // this.ani = new Animation(frames, 15);\n            // this.texture = this.ani.currentFrame;\n        });\n        this.name = \"Controller Test\";\n        this.accel = new _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\n    }\n\n    // get texture() {\n    //     return this.ani.currentFrame;\n    // }\n\n    // set texture(a) {}\n\n    init() {\n    }\n\n    loop() {\n        let moveDelta = this.movementAmt * (_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime/_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.TARGET_MILLIS_PER_FRAME);\n        this.transform.position.add(this.accel.position);\n        if (!this.isPuppet || (this.isPuppet && this.master)) {\n            if ((0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_5__.getKeyState)(\"up\")) {\n                this.accel.position.y = moveDelta * -1;\n            } else if ((0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_5__.getKeyState)(\"down\")) {\n                this.accel.position.y = moveDelta;\n            } else {\n                this.accel.position.y = 0;\n            }\n            if ((0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_5__.getKeyState)(\"left\")) {\n                this.accel.position.x = moveDelta * -1;\n            } else if ((0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_5__.getKeyState)(\"right\")) {\n                this.accel.position.x = moveDelta;\n            } else {\n                this.accel.position.x = 0;\n            }\n        }\n        \n    }\n\n    onDestroy() {\n\n    }\n}\n\n// Make the GameObject Serializable\n\n// Keys to copy over\nconst keys = [\n    \"movementAmt\",\n    \"transform\",\n    \"id\",\n    \"name\",\n    \"accel\"\n]\n\nfunction serializer(obj) {\n    console.log(\"Serialize ControllerTest2\");\n    let toRet = {};\n    keys.forEach((key) => {\n        toRet[key] = obj[key];\n    });\n    return toRet;\n}\n\nfunction deserializer(json) {\n    console.log(\"Deserialize ControllerTest2\");\n    let toRet = new ControllerTest2();\n    keys.forEach((key) => {\n        if (json[key]) toRet[key] = json[key];\n    });\n    return toRet;\n}\n\nfunction stateUpdater(obj, state) {\n    keys.forEach((key) => {\n        if (state[key]) {\n            if (key === \"transform\") {\n                obj.transform.deepCopy(state.transform);\n            } else if (key === \"accel\") {\n                obj.accel.deepCopy(state.accel);\n            } else {\n                Reflect.set(obj, key, state[key]);\n            }\n        }\n    });\n    return obj;\n}\n\n(0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_4__.makeSerializable)(ControllerTest2, serializer, deserializer, stateUpdater);\n\n//# sourceURL=webpack://my-webpack-project/./src/game/ControllerTest2.js?");

/***/ }),

/***/ "./src/game/DrawsThings.js":
/*!*********************************!*\
  !*** ./src/game/DrawsThings.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DrawsThings)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/Render.js */ \"../../packages/jsge-module-graphics2d/src/Render.js\");\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _DrawsThingsBehavior_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DrawsThingsBehavior.js */ \"./src/game/DrawsThingsBehavior.js\");\n/**\n * This is a test of a Renderable GameObject with RenderScripts\n */\n\n// import { Renderable } from \"../engine/Render.js\";\n// import GameObject from \"../engine/GameObject.js\";\n\n\n\n\n\n\nclass DrawsThings extends (0,_node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_0__.Renderable)(_node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n    constructor() {\n        super();\n        this.name = \"Draws Things using the Canvas\";\n        this.attachScript(new _DrawsThingsBehavior_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]());\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/game/DrawsThings.js?");

/***/ }),

/***/ "./src/game/DrawsThingsBehavior.js":
/*!*****************************************!*\
  !*** ./src/game/DrawsThingsBehavior.js ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DrawsThingsBehavior)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_Camera_RenderScript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/Camera/RenderScript.js */ \"../../packages/jsge-module-graphics2d/src/Camera/RenderScript.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Time.js */ \"../../packages/jsge-core/src/Time.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/**\n * Contains a Behavior Script for the DrawsThings.js test\n */\n\n// import RenderScript from \"../engine/Camera/RenderScript.js\";\n\n// import { getTime } from \"../engine/Time.js\";\n\n// import { deltaTime, TARGET_MILLIS_PER_FRAME } from \"../engine/Engine.js\";\n\n\n\n\n\n\n\nconst NUM_STARS = 1000;\nconst MAX_TRAIL = 100;\nconst TRAIL_TIME = 5000;\nconst ADD_STAR_TIME = 10;\n\nclass DrawsThingsBehavior extends _node_modules_jsge_module_graphics2d_src_Camera_RenderScript_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.stars = [];\n        this.lastAddTime;\n        this.gradient = null;\n        this.trail = 5;\n        this.starSpeed = 1;\n        this.addStars = false;\n        this.vertSpeed = 0.25;\n    }\n\n    init() {\n        this.lastAddTime = (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)();\n    }\n\n    loop() {\n        this.stars.forEach((star) => {\n            star.x -= star.size * this.starSpeed * (_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime / _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.TARGET_MILLIS_PER_FRAME);\n        })\n    }\n\n    render(context, width, height) {\n        if (!this.gradient) {\n            let grad = context.createLinearGradient(0, 0, 0, height);\n            grad.addColorStop(0, '#000000');\n            grad.addColorStop(.75, '#333333');\n            grad.addColorStop(1, '#000000');\n            this.gradient = grad;\n        }\n\n        context.fillStyle = this.gradient;\n        context.fillRect(0, 0, width, height);\n\n        this.stars.forEach((star) => {\n            context.fillStyle = star.fill;\n            context.fillRect(star.x, (star.y + ((0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)() * this.vertSpeed)) % height, star.size * this.trail, star.size);\n        });\n\n        setTimeout(() => {\n            if (this.addStars) {\n                while (this.stars.length < NUM_STARS) {\n                    this.addStar(width, randInt(0, height), randInt(1,5));\n                }\n                this.lastAddTime = (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)();\n                this.addStars = false;\n            } else if (this.stars.length < NUM_STARS) {\n                if (this.lastAddTime + ADD_STAR_TIME < (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)()) {\n                    this.addStar(width, randInt(0, height), randInt(1,5));\n                    this.lastAddTime = (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)();\n                }\n            }\n            for (let i = 0; i < this.stars.length; i++) {\n                let star = this.stars[i];\n                if (star.x + (star.size * this.trail) < 0) {\n                    this.stars.splice(i, 1);\n                    i--;\n                }\n            }\n        })\n    }\n\n    // Assumes check is already done\n    addStar(x, y, size) {\n        this.stars.push({\n            x: x,\n            y: y,\n            size: size,\n            fill: randColor()\n        });\n    }\n\n    test() {\n        this.addStars = true;\n    }\n\n    clear = () => {\n        this.stars = [];\n    }\n}\n\nfunction randInt(min, max) {\n    return (Math.random() * (max - min)) + min;\n}\n\nfunction randColor() {\n    return `rgb(${randInt(0,255)},${randInt(0,255)},${randInt(0,255)})`;\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/game/DrawsThingsBehavior.js?");

/***/ }),

/***/ "./src/game/Test.js":
/*!**************************!*\
  !*** ./src/game/Test.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Test)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/* harmony import */ var _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-input/src/Input.js */ \"../../packages/jsge-module-input/src/Input.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Serialize.js */ \"../../packages/jsge-core/src/Serialize.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Time.js */ \"../../packages/jsge-core/src/Time.js\");\n/* harmony import */ var _node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../node_modules/asset-loader/src/AssetLoader.js */ \"../../packages/asset-loader/src/AssetLoader.js\");\n// import GameObject from '../engine/GameObject.js';\n// import { GameObjectWithScript } from '../engine/Script.js';\n\n// import { enrollGameObject, deleteGameObject, deltaTime, TARGET_MILLIS_PER_FRAME } from '../engine/Engine.js';\n\n// import { getKeyState } from '../engine/Input.js';\n\n// import { makeSerializable } from '../engine/Serialize.js';\n\n// import { getTime } from '../engine/Time.js';\n\n// import { asset, load } from '../engine/Asset/AssetLoader.js';\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nlet mainSpriteSheet = null;\n\nconst birth = 100; //500\n\nconst squish = 1000; //4000\n\nconst death = 1500; //3000\n\nclass Test extends (0,_node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__.GameObjectWithScript)(_node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    constructor() {\n        super();\n        this.movementAmt = 5;\n        this.transform.scale.x = 2;\n        this.transform.scale.y = 2;\n        // asset(\"MARIO_SPRITESHEET\").then((spriteSheet) => {\n        //     mainSpriteSheet = spriteSheet;\n        //     let frames = [];\n        //     frames.push(spriteSheet.sheet.get(\"goomba_1\"));\n        //     frames.push(spriteSheet.sheet.get(\"goomba_2\"));\n        //     this.ani = new Animation(frames, 15);\n        //     this.texture = this.ani.currentFrame;\n        // })\n        (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__.load)({\n            name: \"TEST\",\n            path: \"/asset/fp/S_B_1.png\",\n            type: \"image\"\n        });\n        (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_6__.asset)(\"TEST\").then((img) => {\n            this.texture = img;\n            // `spritesheet` is the imported spritesheet\n            // let frames = [];\n            // frames.push(spriteSheet.sheet.get(\"parakoopa_1\"));\n            // frames.push(spriteSheet.sheet.get(\"parakoopa_2\"));\n            // this.ani = new Animation(frames, 15);\n            // this.texture = this.ani.currentFrame;\n        });\n        this.squished = false;\n        this.squishedTimer = 0;\n        this.direction = 0;\n        this.birthTimer = 0;\n        this.deathTimer = 0;\n        this.selfReplicate = 3; // Sterilize them after a few generations so that we don't crash the browser\n        this.name = \"Test\";\n    }\n\n    // get texture() {\n    //     if (this.squished) {\n    //         return mainSpriteSheet.sheet.get(\"goomba_squish\");\n    //     }\n    //     return this.ani.currentFrame;\n    // }\n\n    // set texture(a) {}\n\n    init() {\n        let now = (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_5__.getTime)();\n        this.birthTimer = now;\n        this.squishedTimer = now;\n        this.deathTimer = 0;\n    }\n\n    loop() {\n        if ((0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.getKeyState)(\"test\") === 1) {\n            this.direction = (this.direction + 1) % 2;\n        }\n        let now = (0,_node_modules_jsge_core_src_Time_js__WEBPACK_IMPORTED_MODULE_5__.getTime)();\n        if (now - this.squishedTimer > squish) {\n            this.squished = true;\n        }\n        if (!this.squished) {\n            if (now - this.birthTimer > birth && this.selfReplicate > 0) {\n                // Give Birth\n                let goomba = new Test();\n                goomba.direction = (this.direction + 1) % 2;\n                goomba.selfReplicate = this.selfReplicate - 1;\n                goomba.transform.deepCopy(this.transform);\n                (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.enrollGameObject)(goomba);\n                this.birthTimer = now;\n            }\n            if (this.direction === 0) {\n                this.transform.position.x += this.movementAmt * (_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime/_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.TARGET_MILLIS_PER_FRAME);\n                this.transform.rotation.z += 1 * (_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime/_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.TARGET_MILLIS_PER_FRAME);\n            } else if (this.direction === 1) {\n                this.transform.position.y += this.movementAmt * (_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deltaTime/_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.TARGET_MILLIS_PER_FRAME);\n            }\n        } else if (!this.deathTimer) {\n            this.deathTimer = now;\n        } else if (now - this.deathTimer > death) {\n            (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_2__.deleteGameObject)(this);\n        }\n    }\n\n    onDestroy() {\n        // console.log(\"Destroyed\");\n        window.numGoombas++;\n    }\n}\n\n\n// Make the GameObject Serializable\n\n// Keys to copy over\nconst keys = [\n    \"movementAmt\",\n    \"transform\",\n    \"id\",\n    \"name\",\n    \"direction\",\n    \"selfReplicate\"\n]\n\nfunction serializer(obj) {\n    console.log(\"Serialize Test\");\n    let toRet = {};\n    keys.forEach((key) => {\n        toRet[key] = obj[key];\n    });\n    return toRet;\n}\n\nfunction deserializer(json) {\n    console.log(\"Deserialize Test\");\n    let toRet = new Test();\n    keys.forEach((key) => {\n        if (json[key]) toRet[key] = json[key];\n    });\n    return toRet;\n}\n\nfunction stateUpdater(obj, json) {\n    console.log(\"State Updater\");\n    keys.forEach((key) => {\n        if (json[key]) obj[key] = json[key];\n    });\n    return obj\n}\n\n(0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_4__.makeSerializable)(Test, serializer, deserializer, stateUpdater);\n\n//# sourceURL=webpack://my-webpack-project/./src/game/Test.js?");

/***/ }),

/***/ "./src/game/tilemap/Tile.js":
/*!**********************************!*\
  !*** ./src/game/tilemap/Tile.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tile)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/**\n * Tile Encapsulation Class\n */\n\n// import GameObject from '../../engine/GameObject.js';\n\n\n// A Tile is embedded into a TileChunk\nclass Tile extends _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.tilesetID = -1;\n        this.row = -1;\n        this.column = -1;\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/game/tilemap/Tile.js?");

/***/ }),

/***/ "./src/game/tilemap/TileLayer.js":
/*!***************************************!*\
  !*** ./src/game/tilemap/TileLayer.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Tile.js */ \"./src/game/tilemap/Tile.js\");\n/**\n * Contains the Tile Layer, which comes in a few variants; One to hold Tiles, and the other to hold Objects\n */\n\n// import GameObject from \"../../engine/GameObject.js\";\n// import Script from \"../../engine/Script.js\";\n\n\n\n\n\n\nclass TileImportScript extends _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super();\n        this.tiles = [];\n    }\n\n    // Arr of ints\n    importFromArr(arr, size) {\n        for (let i = 0; i < arr.length; i++) {\n            const r = arr[i];\n            let rowArr = [];\n            for (let j = 0; j < r.length; j++) {\n                const c = r[j];\n                const t = new _Tile_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n                t.tilesetID = c;\n                t.row = i;\n                t.column = j;\n                t.transform.position.x = j * size;\n                t.transform.position.y = i * size;\n                if (this.gameObject.tileset && this.gameObject.tileset.sheet.has(c)) {\n                    t.texture = this.gameObject.tileset.sheet.get(c);\n                }\n                this.gameObject.attachGameObject(t);\n                rowArr.push(t);\n            }\n            this.tiles.push(rowArr);\n        }\n    }\n\n    setTile(r, c, id) {\n        const t = this.tiles[r][c];\n        t.tilesetID = id;\n        if (this.gameObject.tileset && this.gameObject.tileset.sheet.has(id)) {\n            t.texture = this.gameObject.tileset.sheet.get(id);\n        }\n    }\n\n    getTile(r, c) {\n        return this.tiles[r][c];\n    }\n}\n\nclass TileLayer extends _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.renderType = null;\n        this.tileset = null;\n        this.attachScript(new TileImportScript());\n    }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileLayer);\n\n//# sourceURL=webpack://my-webpack-project/./src/game/tilemap/TileLayer.js?");

/***/ }),

/***/ "./src/game/tilemap/TileMap.js":
/*!*************************************!*\
  !*** ./src/game/tilemap/TileMap.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MAP_TYPES\": () => (/* binding */ MAP_TYPES),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/* harmony import */ var _TileLayer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TileLayer.js */ \"./src/game/tilemap/TileLayer.js\");\n/* harmony import */ var _Tile_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Tile.js */ \"./src/game/tilemap/Tile.js\");\n/**\n * This is a Tilemap. This tilemap handles loading the map in and computing how the map will be drawn onto the final render (specific to 2d rendering backend)\n */\n\n// import GameObject from '../../engine/GameObject.js';\n// import Script from '../../engine/Script.js';\n// import {Renderable} from '../../engine/Render.js';\n// import RenderScript from \"../../engine/Camera/RenderScript.js\";\n// import { enrollGameObject } from \"../../engine/Engine.js\";\n\n\n\n\n\n\n\n// This behaves like how an ENUM would in other languages\nconst MAP_TYPES = Object.freeze({\n    ORTHAGONAL: 0,\n    // ISOMETRIC: 1,\n});\n\nclass TileMapScript extends _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor() {\n        super();\n        this.renderType = MAP_TYPES.ORTHAGONAL;\n        this.tileset = null; // This should be a Spritesheet\n    }\n\n    setTileset(spritesheet) {\n        this.tileset = spritesheet;\n        // Update the layer spritesheets\n        for (const lyr of this.gameObject.children) {\n            if (lyr instanceof _TileLayer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]) {\n                lyr.tileset = spritesheet;\n                // Reset the textures\n                for (const c of lyr.children) {\n                    if (c instanceof _Tile_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]) {\n                        if (spritesheet.sheet.has(c.tilesetID)) {\n                            c.texture = spritesheet.sheet.get(c.tilesetID);\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    addLayer(lyr) {\n        lyr.renderType = this.renderType;\n        lyr.tileset = this.tileset;\n        console.log(\"Adding Layer:\", lyr)\n        this.gameObject.attachGameObject(lyr);\n    }\n}\n\nclass TileMap extends _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.attachScript(new TileMapScript());\n    }\n}\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TileMap);\n\n//# sourceURL=webpack://my-webpack-project/./src/game/tilemap/TileMap.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _ui_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ui.js */ \"./src/ui.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/* harmony import */ var _game_ControllerTest2_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./game/ControllerTest2.js */ \"./src/game/ControllerTest2.js\");\n/* harmony import */ var _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-input/src/Input.js */ \"../../packages/jsge-module-input/src/Input.js\");\n/* harmony import */ var _node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-networking/src/Puppeteer.js */ \"../../packages/jsge-module-networking/src/Puppeteer.js\");\n/* harmony import */ var _node_modules_jsge_module_networking_src_Network_RoomController_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-networking/src/Network/RoomController.js */ \"../../packages/jsge-module-networking/src/Network/RoomController.js\");\n/* harmony import */ var _node_modules_jsge_module_basic_physics_src_Physics_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-basic-physics/src/Physics.js */ \"../../packages/jsge-module-basic-physics/src/Physics.js\");\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/Render.js */ \"../../packages/jsge-module-graphics2d/src/Render.js\");\n/* harmony import */ var _node_modules_jsge_module_audio_src_Audio_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-audio/src/Audio.js */ \"../../packages/jsge-module-audio/src/Audio.js\");\n/* harmony import */ var _node_modules_jsge_module_debug_src_Debug_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-debug/src/Debug.js */ \"../../packages/jsge-module-debug/src/Debug.js\");\n/* harmony import */ var _temp_scenes_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./temp_scenes.js */ \"./src/temp_scenes.js\");\n/* harmony import */ var _temp_assets_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./temp_assets.js */ \"./src/temp_assets.js\");\n\n\n// import { initGameLoop, setCurrentScene, TARGET_MILLIS_PER_FRAME, deltaTime, enrollGameObject, addJMod } from './engine/Engine.js';\n\n\n// import Scene from './engine/Scene.js';\n\n// import Test from './game/Test.js';\n\n\n\n// import { defineKey, TYPE_DIGITAL, setKeyOnNextInput, getAllKeys, setKeybindings } from './engine/Input.js';\n\n\n\n\n// import { serialize, deserialize, defaultStateUpdater } from './engine/Serialize.js';\n\n// import { Puppet, convertInstanceIntoPuppet, convertPuppetIntoInstance, disablePuppetUpdates, connect, disconnect } from './engine/Puppeteer.js';\n\n// import { Camera } from './engine/Camera/Camera.js';\n// import DrawsThings from './game/DrawsThings.js';\n\n// import { load, asset, loadGroup } from './engine/Asset/AssetLoader.js';\n\n// import { createRoom, getRooms } from './engine/Network/RoomController.js';\n\n\n// import {jmod as inputJmod} from \"./engine/Input.js\";\n// import {jmod as phyJmod} from \"./engine/Physics.js\";\n// import {jmod as rendJmod} from \"./engine/Render.js\";\n// import {jmod as pJmod} from \"./engine/Puppeteer.js\";\n// import audioMod from './engine/Audio/Audio.js';\n// import {jmod as dbgJmod} from './engine/Debug.js';\n\n\n\n\n\n\n\n\n\n\n\n\nfunction initEngine() {\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_debug_src_Debug_js__WEBPACK_IMPORTED_MODULE_9__.jmod);\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.jmod);\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_basic_physics_src_Physics_js__WEBPACK_IMPORTED_MODULE_6__.jmod);\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.jmod);\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_audio_src_Audio_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]);\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.addJMod)(_node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_7__.jmod);\n}\n\nfunction main() {\n    window.numGoombas = 0;\n    (0,_ui_js__WEBPACK_IMPORTED_MODULE_0__.initUI)();\n\n    initEngine();\n\n    // initDebug();\n\n    window.dev = {};\n    window.dev.test = () => {\n        let a = window.debug.engine.gameObjects[1];\n        let blacklist = [\"children\", \"ani\", \"parent\", \"gameObject\", \"scripts\"];\n        let k = window.debug.serialize.getKeys(a.constructor, blacklist);\n        console.log(\"Keys:\", k);\n        let ser = debug.serialize.defaultSerializer(k);\n        let deser = debug.serialize.defaultDeserializer(k, a.constructor);\n        let json = JSON.parse(JSON.stringify(ser(a)));\n        console.log(\"Serialized:\", json);\n        let b = deser(json);\n        console.log(\"Deserialized:\", b);\n    }\n    \n    ;(0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.defineKey)(\"test\", _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_DIGITAL);\n    (0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.defineKey)(\"up\", _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_DIGITAL);\n    (0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.defineKey)(\"down\", _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_DIGITAL);\n    (0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.defineKey)(\"left\", _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_DIGITAL);\n    (0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.defineKey)(\"right\", _node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.TYPE_DIGITAL);\n    // Set Default Keymappings\n    (0,_node_modules_jsge_module_input_src_Input_js__WEBPACK_IMPORTED_MODULE_3__.setKeybindings)({\"test\":{\"state\":0,\"mapping\":[\"k\",32],\"mappingName\":\" \",\"type\":1},\"up\":{\"state\":0,\"mapping\":[\"k\",38],\"mappingName\":\"ArrowUp\",\"type\":1},\"down\":{\"state\":0,\"mapping\":[\"k\",40],\"mappingName\":\"ArrowDown\",\"type\":1},\"left\":{\"state\":0,\"mapping\":[\"k\",37],\"mappingName\":\"ArrowLeft\",\"type\":1},\"right\":{\"state\":0,\"mapping\":[\"k\",39],\"mappingName\":\"ArrowRight\",\"type\":1}});\n    (0,_temp_assets_js__WEBPACK_IMPORTED_MODULE_11__.defineLoadTypes)();\n    (0,_temp_assets_js__WEBPACK_IMPORTED_MODULE_11__.defineAssets)();\n    (0,_temp_assets_js__WEBPACK_IMPORTED_MODULE_11__.loadSpaceScene)().then(() => {\n        // Set the Scene\n        let scene = (0,_temp_scenes_js__WEBPACK_IMPORTED_MODULE_10__.spaceScene)();\n        \n        (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.setCurrentScene)(scene);\n        \n        // Initialize the Game Loop\n        (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.initGameLoop)();\n\n        window.dev.toggleOverlay = () => {\n            (0,_ui_js__WEBPACK_IMPORTED_MODULE_0__.toggleOverlay)();\n        }\n\n        // TEMP: Testing puppeteer\n        // connect(window.CONFIG.pubsub); // @TODO Find a better way to handle a failed connection\n        window.dev.disconnect = () => {\n            ;(0,_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.disconnect)();\n        }\n        window.dev.createRoom = async () => {\n            let room = await (0,_node_modules_jsge_module_networking_src_Network_RoomController_js__WEBPACK_IMPORTED_MODULE_5__.createRoom)(window.CONFIG.rooms_api, {\n                name: \"JSGE Test Room\",\n                private: false\n            });\n            console.log(\"Room created:\", room);\n        }\n\n        window.dev.getRooms = async () => {\n            let rooms = await (0,_node_modules_jsge_module_networking_src_Network_RoomController_js__WEBPACK_IMPORTED_MODULE_5__.getRooms)(window.CONFIG.rooms_api);\n            console.log(\"Got rooms:\", rooms);\n        }\n        window.dev.reconnect = (roomID) => {\n            ;(0,_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.connect)(window.CONFIG.pubsub + \"/\" + roomID);\n        }\n        window.dev.testws = () => {\n            let a = new ((0,_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.Puppet)(_game_ControllerTest2_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"], true))();\n            a.transform.position.x = 50;\n            (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.enrollGameObject)(a);\n            scene.attachGameObject(a);\n        }\n\n        // Change scene\n        window.dev.scene = (num) => {\n            let scene = null;\n            const map = {\n                0: {ld:_temp_assets_js__WEBPACK_IMPORTED_MODULE_11__.loadSpaceScene, scn:_temp_scenes_js__WEBPACK_IMPORTED_MODULE_10__.spaceScene},\n                1: {ld:_temp_assets_js__WEBPACK_IMPORTED_MODULE_11__.loadTileScene, scn:_temp_scenes_js__WEBPACK_IMPORTED_MODULE_10__.tileScene}\n            };\n            scene = map[num];\n            if (scene) {\n                scene.ld().then(() => {\n                    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.setCurrentScene)(scene.scn());\n                }).catch((err) => {\n                    console.error(err);\n                });\n            }\n        };\n\n\n\n\n        window.dev.a = async () => {\n            console.log(\"Creating Room...\");\n            let room = await (0,_node_modules_jsge_module_networking_src_Network_RoomController_js__WEBPACK_IMPORTED_MODULE_5__.createRoom)(window.CONFIG.rooms_api, {\n                name: \"JSGE Test Room\",\n                private: false\n            });\n            console.log(\"Joining Room:\", room);\n            (0,_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.connect)(window.CONFIG.pubsub + \"/\" + room.id);\n        }\n\n        window.dev.b = async () => {\n            console.log(\"Joining First room...\");\n            let rooms = await (0,_node_modules_jsge_module_networking_src_Network_RoomController_js__WEBPACK_IMPORTED_MODULE_5__.getRooms)(window.CONFIG.rooms_api);\n            if (rooms && rooms.length > 0) {\n                console.log(\"Joining Room:\", rooms[0]);\n                (0,_node_modules_jsge_module_networking_src_Puppeteer_js__WEBPACK_IMPORTED_MODULE_4__.connect)(window.CONFIG.pubsub + \"/\" + rooms[0].id);\n            } else {\n                console.log(\"No Room!\");\n            }\n        }\n    })\n}\n\nmain();\n\n//# sourceURL=webpack://my-webpack-project/./src/main.js?");

/***/ }),

/***/ "./src/temp_assets.js":
/*!****************************!*\
  !*** ./src/temp_assets.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"defineAssets\": () => (/* binding */ defineAssets),\n/* harmony export */   \"defineLoadTypes\": () => (/* binding */ defineLoadTypes),\n/* harmony export */   \"loadSpaceScene\": () => (/* binding */ loadSpaceScene),\n/* harmony export */   \"loadTileScene\": () => (/* binding */ loadTileScene)\n/* harmony export */ });\n/* harmony import */ var _node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/asset-loader/src/AssetLoader.js */ \"../../packages/asset-loader/src/AssetLoader.js\");\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_SpriteSheet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/SpriteSheet.js */ \"../../packages/jsge-module-graphics2d/src/SpriteSheet.js\");\n/**\n * Contains definitions for all assets loaded in for the game. This is a temporary file and should be removed when AssetLoading / Prefabs are fully implemented.\n */\n\n\n\n\nfunction defineLoadTypes() {\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.addCustomLoader)(\"spritesheet\", async (options) => {\n        let s = new _node_modules_jsge_module_graphics2d_src_SpriteSheet_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        s.importFromPath(options.path, options.options.width, options.options.height);\n        console.log(\"Spritesheet\");\n        await s.ready;\n        options.data = s;\n        options.loaded = true;\n    });\n\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.addCustomLoader)(\"spritesheet-options\", async (options) => {\n        let resp = await fetch(options.path)\n        let s = new _node_modules_jsge_module_graphics2d_src_SpriteSheet_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\n        let json = await resp.json();\n        console.log(json);\n        s.importFromOptions(json);\n        await s.ready;\n        options.data = s;\n        options.loaded = true;\n    });\n}\n\nfunction defineAssets() {\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.load)({\n        name: \"0\",\n        path: \"/asset/fp/0.png\",\n        type: \"image\",\n        groups: [\"main\"]\n    });\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.load)({\n        name: \"1\",\n        path: \"/asset/fp/1.png\",\n        type: \"image\",\n        groups: [\"main\"]\n    });\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.load)({\n        name: \"2\",\n        path: \"/asset/fp/2.png\",\n        type: \"image\",\n        groups: [\"main\"]\n    });\n    (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.load)({\n        name: \"tilesheet\",\n        path: \"/asset/test_tilesheet.png\",\n        type: \"spritesheet\",\n        options: {\n            height: 16,\n            width: 16\n        },\n        groups: [\"tiledemo\"]\n    });\n}\n\nfunction loadSpaceScene() {\n    return (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.loadGroup)(\"main\");\n}\n\nfunction loadTileScene() {\n    return (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_0__.loadGroup)(\"tiledemo\");\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/temp_assets.js?");

/***/ }),

/***/ "./src/temp_scenes.js":
/*!****************************!*\
  !*** ./src/temp_scenes.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"spaceScene\": () => (/* binding */ spaceScene),\n/* harmony export */   \"tileScene\": () => (/* binding */ tileScene)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Scene_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-core/src/Scene.js */ \"../../packages/jsge-core/src/Scene.js\");\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_Camera_Camera_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/Camera/Camera.js */ \"../../packages/jsge-module-graphics2d/src/Camera/Camera.js\");\n/* harmony import */ var _node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../../node_modules/asset-loader/src/AssetLoader.js */ \"../../packages/asset-loader/src/AssetLoader.js\");\n/* harmony import */ var _game_Test_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./game/Test.js */ \"./src/game/Test.js\");\n/* harmony import */ var _game_DrawsThings_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./game/DrawsThings.js */ \"./src/game/DrawsThings.js\");\n/* harmony import */ var _game_ControllerTest2_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./game/ControllerTest2.js */ \"./src/game/ControllerTest2.js\");\n/* harmony import */ var _game_tilemap_TileMap_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./game/tilemap/TileMap.js */ \"./src/game/tilemap/TileMap.js\");\n/* harmony import */ var _game_tilemap_TileLayer_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./game/tilemap/TileLayer.js */ \"./src/game/tilemap/TileLayer.js\");\n/* harmony import */ var _game_BoxMovement_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./game/BoxMovement.js */ \"./src/game/BoxMovement.js\");\n/**\n * This is a collection of the scenes that are being used in JSGE. This file should be removed after Asset Loading / Prefabs are working properly.\n */\n\n// import Scene from './engine/Scene.js';\n// import { Camera } from './engine/Camera/Camera.js';\n// import { asset } from './engine/Asset/AssetLoader.js';\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Constructs the Space Scene that has the starfield and FighterPilot Ship\n */\n\nfunction spaceScene() {\n    let scene = new _node_modules_jsge_core_src_Scene_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    scene.name = \"Space Scene\";\n    scene.attachGameObject(new _game_DrawsThings_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]());\n    scene.attachGameObject(new _game_Test_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]());\n    scene.attachGameObject(new _game_ControllerTest2_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]());\n    scene.attachGameObject(new _node_modules_jsge_module_graphics2d_src_Camera_Camera_js__WEBPACK_IMPORTED_MODULE_1__.Camera());\n    return scene;\n}\n\n/**\n * Generates the Tile Map Demo scene\n * @returns the Tilemap demo scene\n */\n\nfunction tileScene() {\n    let scene = new _node_modules_jsge_core_src_Scene_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    scene.name = \"Tile Scene\";\n\n    let cam = new _node_modules_jsge_module_graphics2d_src_Camera_Camera_js__WEBPACK_IMPORTED_MODULE_1__.Camera();\n    let bmb = new _game_BoxMovement_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]();\n    bmb.xChange = 10;\n    bmb.yChange = 10;\n    bmb.speed = 0.01;\n    // cam.attachScript(bmb);\n    scene.attachGameObject(cam);\n\n    let tm = new _game_tilemap_TileMap_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n    // tm.transform.rotation.x = 45;\n    scene.attachGameObject(tm);\n    \n    let lyr = new _game_tilemap_TileLayer_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n    lyr.transform.scale.x = 4;\n    lyr.transform.scale.y = 4;\n    // let arr = [\n    //     [0,1,2],\n    //     [3,4,5]\n    // ];\n    let arr = genTileArr();\n    console.log(arr);\n    lyr.scripts[0].importFromArr(arr, 16);\n    lyr.children[0].transform.rotation.x = 45;\n    tm.scripts[0].addLayer(lyr);\n\n    const f = async () => {\n        let scr = tm.scripts[0]; // Should be TileMapScript\n        let t = await (0,_node_modules_asset_loader_src_AssetLoader_js__WEBPACK_IMPORTED_MODULE_2__.asset)(\"tilesheet\");\n        scr.setTileset(t);\n    }\n    f();\n\n    // setTimeout(() => {\n    //     cam.transform.rotation.x = 45;\n    // }, 5000);\n    return scene;\n}\n\nconst DEFAULT_SIZE = 50; // was 100\nconst DEFAULT_TILE_VALUES = [\n    0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,\n    21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,\n];\n\nfunction randInt(min, max) {\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nfunction genTileArr(xSize = DEFAULT_SIZE, ySize = DEFAULT_SIZE, tileValues = DEFAULT_TILE_VALUES) {\n    let toRet = [];\n    for (let y = 0; y < ySize; y++) {\n        let arr = [];\n        for (let x = 0; x < xSize; x++) {\n            let v = randInt(0, tileValues.length);\n            arr.push(tileValues[v]);\n        }\n        toRet.push(arr);\n    }\n    return toRet;\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/temp_scenes.js?");

/***/ }),

/***/ "./src/ui.js":
/*!*******************!*\
  !*** ./src/ui.js ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"canvas\": () => (/* binding */ canvas),\n/* harmony export */   \"initUI\": () => (/* binding */ initUI),\n/* harmony export */   \"overlay\": () => (/* binding */ overlay),\n/* harmony export */   \"toggleOverlay\": () => (/* binding */ toggleOverlay)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../../../../node_modules/jsge-module-graphics2d/src/Render.js */ \"../../packages/jsge-module-graphics2d/src/Render.js\");\n/**\n * This contains all code to initialize and manage the UI\n */\n\n// import { setCanvas } from './engine/Render.js';\n\n\nconst canvas = document.getElementById('canvas');\nconst overlay = document.getElementById('overlay');\n\nlet overlayVisible = false;\n\nfunction initUI() {\n    (0,_node_modules_jsge_module_graphics2d_src_Render_js__WEBPACK_IMPORTED_MODULE_0__.setCanvas)(canvas);\n    resizeScreen();\n    window.addEventListener(\"resize\", resizeScreen);\n    if (!overlayVisible) {\n        overlay.setAttribute(\"hidden\", \"\");\n    } else {\n        overlay.removeAttribute(\"hidden\");\n    }\n    console.log(\"UI Initialized\");\n}\n\nfunction resizeScreen(e) {\n    let width = Math.max(document.documentElement.clientWidth, window.innerWidth);\n    let height = Math.max(document.documentElement.clientHeight, window.innerHeight);\n    console.log(\"Screen:\", width, height);\n    canvas.setAttribute(\"width\", width);\n    canvas.setAttribute(\"height\", height);\n}\n\nfunction toggleOverlay() {\n    overlayVisible = !overlayVisible;\n    if (!overlayVisible) {\n        overlay.setAttribute(\"hidden\", \"\");\n    } else {\n        overlay.removeAttribute(\"hidden\");\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/./src/ui.js?");

/***/ }),

/***/ "../../packages/asset-loader/src/AssetLoader.js":
/*!******************************************************!*\
  !*** ../../packages/asset-loader/src/AssetLoader.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addCustomLoader\": () => (/* binding */ addCustomLoader),\n/* harmony export */   \"asset\": () => (/* binding */ asset),\n/* harmony export */   \"load\": () => (/* binding */ load),\n/* harmony export */   \"loadGroup\": () => (/* binding */ loadGroup),\n/* harmony export */   \"unload\": () => (/* binding */ unload)\n/* harmony export */ });\n// This is responsible for loading Content\n\n// import SpriteSheet from '../SpriteSheet.js';\n\nlet loadedContent = {};\n\nlet loadGroups = {};\n\n// These are used to load an asset into a usable format\nconst loaders = {\n    // \"spritesheet\": async (options) => {\n    //     let s = new SpriteSheet();\n    //     s.importFromPath(options.path, options.options.width, options.options.height);\n    //     console.log(\"Spritesheet\");\n    //     await s.ready;\n    //     options.data = s;\n    //     options.loaded = true;\n    // },\n    // \"spritesheet-options\": async (options) => {\n    //     let resp = await fetch(options.path)\n    //     let s = new SpriteSheet();\n    //     let json = await resp.json();\n    //     console.log(json);\n    //     s.importFromOptions(json);\n    //     await s.ready;\n    //     options.data = s;\n    //     options.loaded = true;\n    // },\n    \"image\": async (options) => {\n        let p = new Promise((res, rej) => {\n            let i = new Image();\n            i.src = options.path;\n            i.onload = () => res(i);\n            i.onerror = (e) => rej(e);\n        });\n        options.data = await p;\n        options.loaded = true;\n    },\n    \"json\": async (options) => {\n        let resp = await fetch(options.path);\n        options.data = resp.json();\n        options.loaded = true;\n    },\n    \"csv\": async (options) => {\n        let resp = await fetch(options.path);\n        let text = await resp.text();\n        let data = text.split('\\n').map((line) => {\n            return line.split(',').map((cell) => {\n                return cell;\n            });\n        });\n        options.data = data;\n        options.loaded = true;\n    }\n}\n\nlet exampleAssetOpts = {\n    name: \"TEST_ASSET_1\",\n    path: \"/asset/test.png\",\n    type: \"spritesheet\",\n    options: {\n        width: 16,\n        height: 16\n    },\n    groups: [\n        \"level_1\"\n    ]\n}\n\n// Allows adding a custom loader\nfunction addCustomLoader(typeName, loader) {\n    loaders[typeName] = loader;\n}\n\n// Defines an asset to be loaded later\nfunction load(assetOpts) {\n    if (loadedContent[assetOpts.name]) {\n        // console.log(\"Asset already present in list\");\n        return;\n    }\n    let toSave = {\n        loaded: false,\n        data: null,\n        path: assetOpts.path,\n        type: assetOpts.type,\n        options: assetOpts.options,\n        groups: assetOpts.groups || []\n    };\n    loadedContent[assetOpts.name] = toSave;\n    if (toSave.groups) {\n        toSave.groups.forEach((group) => {\n            if (!loadGroups[group]) {\n                loadGroups[group] = [];\n            }\n            loadGroups[group].push(toSave);\n        })\n    }\n}\n\n// Access an asset (will automatically load if not already loaded)\nasync function asset(assetName, forceReload=false) {\n    if (!loadedContent[assetName]) {\n        let err = \"Asset not defined!\";\n        console.error(err);\n        throw new Error(err);\n    }\n    if (!forceReload && loadedContent[assetName].loaded) {\n        return loadedContent[assetName].data;\n    } else {\n        let type = loadedContent[assetName].type;\n        if (!loaders[type]) {\n            let err = \"No loader defined for type \" + type;\n            console.error(err);\n            throw new Error(err);\n        }\n        await loaders[type](loadedContent[assetName]);\n        return loadedContent[assetName].data;\n    }\n}\n\n// Force loading of all assets in a loading group\nasync function loadGroup(name) {\n    if (!loadGroups[name]) {\n        let err = \"Group not defined\";\n        console.error(err);\n        throw new Error(err);\n    }\n    for (let assetOpts of loadGroups[name]) {\n        if (!assetOpts.loaded) {\n            await loaders[assetOpts.type](assetOpts);\n        }\n    }\n}\n\nfunction unload(assetName) {\n    if (!loadedContent[assetName]) {\n        let err = \"Asset not defined!\";\n        console.error(err);\n        throw new Error(err);\n    }\n    if (loadedContent[assetName].loaded) {\n        delete loadedContent[assetName].data;\n    }\n}\n\n// Load Immediately\n\n//# sourceURL=webpack://my-webpack-project/../../packages/asset-loader/src/AssetLoader.js?");

/***/ }),

/***/ "../../packages/jsge-core/node_modules/uuid/dist/esm-browser/regex.js":
/*!****************************************************************************!*\
  !*** ../../packages/jsge-core/node_modules/uuid/dist/esm-browser/regex.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i);\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/node_modules/uuid/dist/esm-browser/regex.js?");

/***/ }),

/***/ "../../packages/jsge-core/node_modules/uuid/dist/esm-browser/rng.js":
/*!**************************************************************************!*\
  !*** ../../packages/jsge-core/node_modules/uuid/dist/esm-browser/rng.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ rng)\n/* harmony export */ });\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/node_modules/uuid/dist/esm-browser/rng.js?");

/***/ }),

/***/ "../../packages/jsge-core/node_modules/uuid/dist/esm-browser/stringify.js":
/*!********************************************************************************!*\
  !*** ../../packages/jsge-core/node_modules/uuid/dist/esm-browser/stringify.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./validate.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/validate.js\");\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!(0,_validate_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (stringify);\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/node_modules/uuid/dist/esm-browser/stringify.js?");

/***/ }),

/***/ "../../packages/jsge-core/node_modules/uuid/dist/esm-browser/v4.js":
/*!*************************************************************************!*\
  !*** ../../packages/jsge-core/node_modules/uuid/dist/esm-browser/v4.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _rng_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rng.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/rng.js\");\n/* harmony import */ var _stringify_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./stringify.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/stringify.js\");\n\n\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || _rng_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return (0,_stringify_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(rnds);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (v4);\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/node_modules/uuid/dist/esm-browser/v4.js?");

/***/ }),

/***/ "../../packages/jsge-core/node_modules/uuid/dist/esm-browser/validate.js":
/*!*******************************************************************************!*\
  !*** ../../packages/jsge-core/node_modules/uuid/dist/esm-browser/validate.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _regex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./regex.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/regex.js\");\n\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && _regex_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].test(uuid);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (validate);\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/node_modules/uuid/dist/esm-browser/validate.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Engine.js":
/*!**********************************************!*\
  !*** ../../packages/jsge-core/src/Engine.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TARGET_MILLIS_PER_FRAME\": () => (/* binding */ TARGET_MILLIS_PER_FRAME),\n/* harmony export */   \"addJMod\": () => (/* binding */ addJMod),\n/* harmony export */   \"deleteGameObject\": () => (/* binding */ deleteGameObject),\n/* harmony export */   \"deltaTime\": () => (/* binding */ deltaTime),\n/* harmony export */   \"enrollGameObject\": () => (/* binding */ enrollGameObject),\n/* harmony export */   \"getCurrentScene\": () => (/* binding */ getCurrentScene),\n/* harmony export */   \"getGameObjectByGroup\": () => (/* binding */ getGameObjectByGroup),\n/* harmony export */   \"getGameObjectByID\": () => (/* binding */ getGameObjectByID),\n/* harmony export */   \"getGameObjectByName\": () => (/* binding */ getGameObjectByName),\n/* harmony export */   \"initDebug\": () => (/* binding */ initDebug),\n/* harmony export */   \"initGameLoop\": () => (/* binding */ initGameLoop),\n/* harmony export */   \"restartGameLoop\": () => (/* binding */ restartGameLoop),\n/* harmony export */   \"setCurrentScene\": () => (/* binding */ setCurrentScene),\n/* harmony export */   \"stepGameLoop\": () => (/* binding */ stepGameLoop),\n/* harmony export */   \"stopGameLoop\": () => (/* binding */ stopGameLoop)\n/* harmony export */ });\n/* harmony import */ var _ScriptManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ScriptManager.js */ \"../../packages/jsge-core/src/ScriptManager.js\");\n/* harmony import */ var _Time_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Time.js */ \"../../packages/jsge-core/src/Time.js\");\n/* harmony import */ var _Physics_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Physics.js */ \"../../packages/jsge-core/src/Physics.js\");\n/**\n * Engine contains the basic framework for the game engine\n */\n\n// import { renderGameObjectsWith2dContext, initializeWith2dContext, initializeWithWebGL, renderGameObjectsWithWebGL } from './Render.js';\n\n\n\n// import { pollGamepads, initInput } from './Input.js';\n\n\n\n\n\n// import { checkPuppets, disconnect } from './Puppeteer.js';\n\nlet gameLoopStarted = false;\nlet stopLoop = null; // Magic reference to stop the game Loop\nlet currScene = null; // Current Scene to be rendering\n\nlet gameObjects = []; // Game Objects to process each loop\nlet gameObjectsIDs = new Set(); // Contains all GameObject IDs onscreen\n\nlet gameObjectsByID = {}; // Stores GameObjects by ID (Unique)\nlet gameObjectsByName = {}; // Stores GameObjects by Name (Array)\nlet gameObjectsByGroup = {}; // Stores GameObjects by Group Name (Array)\n\nlet deltaTime = 0; // Number of Milliseconds the previous frame took to render\nconst TARGET_MILLIS_PER_FRAME = 16; // 60fps -> ~16 milliseconds\nlet prevTime = 0;\nlet currTime = 0;\n\n// Keeps Track of Function that need to be run on each Event\nlet allowModuleLoading = true;\nlet initFuncs = []; // Initialization Functions\nlet loopFuncs = []; // Functions run on each Game Loop\nlet debugFuncs = []; // Functions run on Debug Events\n\n// References passed to the JMods\nconst engineInternals = {\n    gameObjects,\n    currTime,\n    TARGET_MILLIS_PER_FRAME\n};\n\n// Warning and Error Message Debouncing\nconst errorTypes = {\n    \"TenThousand\": false,\n    \"HundredThousand\": false\n}\n\nfunction addJMod(jmod) {\n    if (!allowModuleLoading) {\n        throw new Error(\"Error: Attempted to load module after initialization!\");\n    }\n    console.log(`Loading Module [${jmod.name || (jmod.constructor && jmod.constructor.name)}${(jmod.version || jmod.version === 0) ? \" (v:\" + jmod.version + \")\" : \"\"}]...`);\n    if (jmod.init) {\n        initFuncs.push(jmod.init);\n    }\n    if (jmod.loop) {\n        loopFuncs.push(jmod.loop);\n    }\n}\n\n// Starts the Game Loop\nfunction initGameLoop() {\n    if (!currScene) throw new Error(\"You must select a Scene First!\");\n    allowModuleLoading = false;\n\n    // Initialize\n    for (let i = 0; i < initFuncs.length; i++) {\n        const f = initFuncs[i];\n        f(engineInternals);\n    }\n    \n    gameLoopStarted = true;\n    currTime = window.performance.now();\n    main();\n}\n\n// Initializes Debug Interface\nfunction initDebug() {\n    let dbg = {};\n    dbg.gameObjects = gameObjects;\n    dbg.setCurrentScene = setCurrentScene;\n    dbg.enrollGameObject = enrollGameObject;\n    dbg.deleteGameObject = deleteGameObject;\n    dbg.stopGameLoop = stopGameLoop;\n    dbg.restartGameLoop = restartGameLoop;\n    dbg.stepGameLoop = stepGameLoop;\n    dbg.getTime = _Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime;\n    dbg.getGameObjectByID = getGameObjectByID;\n    dbg.getGameObjectByName = getGameObjectByName;\n    dbg.getGameObjectByGroup = getGameObjectByGroup;\n    dbg.TARGET_MILLIS_PER_FRAME = TARGET_MILLIS_PER_FRAME;\n    window.debug.engine = dbg;\n}\n\nfunction stopGameLoop() {\n    window.cancelAnimationFrame(stopLoop);\n    // disconnect();\n    (0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.pauseTime)();\n}\n\n/**\n * Run the GameLoop Once\n * @param {Number} fakeDelta If provided, will set the deltaTime\n */\nfunction stepGameLoop(fakeDelta) {\n    setTimeout(() => {\n        if (fakeDelta || fakeDelta === 0) {\n            (0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.advanceTime)(fakeDelta);\n        } else {\n            (0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.advanceTime)(TARGET_MILLIS_PER_FRAME);\n        }\n        loop();\n    });\n}\n\n// Only use this if re-starting the game after the loop was stopped.\nfunction restartGameLoop() {\n    if ((0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.isTimePaused)()) {\n        main();\n        (0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.unpauseTime)();\n    }\n}\n\n// Sets the current scene, and deletes the old one\nfunction setCurrentScene(scene) {\n    let oldScn = currScene;\n    currScene = scene;\n    deleteGameObjectSync(oldScn);\n    enrollGameObject(scene);\n}\n\nfunction getCurrentScene() {\n    return currScene;\n}\n\n// Enrolls GameObjects and their children, and initializes their scripts\nfunction enrollGameObject(go) {\n    if (!go) return;\n    // Check for ID\n    if (gameObjectsIDs.has(go.id)) return;\n    setTimeout(() => {\n        let toInitScripts = {arr:[]};\n        // Attach to the current Scene, unless we are attaching the scene itself!\n        if (go.id !== currScene.id) {\n            currScene.attachGameObject(go);\n        }\n        enrollGameObjectHelper(go, toInitScripts);\n        (0,_ScriptManager_js__WEBPACK_IMPORTED_MODULE_0__.initGameObjectScripts)(toInitScripts.arr);\n    });\n}\n\n/**\n * Enrolls the Children, as well as the parent GameObject\n * @param {GameObject} go GameObject to enroll\n * @param {Object} refArr Reference Array encapsulated by an object to add all of the references to the added GOs to\n */\nfunction enrollGameObjectHelper(go, refArr) {\n    if (!refArr || refArr.arr === undefined) return;\n    if (gameObjectsIDs.has(go.id)) return;\n    refArr.arr.push(go); // Reference Array of things to Initialize\n    gameObjectsIDs.add(go.id); // Enforce that each GameObject is only added once\n    gameObjects.push(go);\n    // Add to Group Name List\n    if (!gameObjectsByGroup[go.group]) {\n        gameObjectsByGroup[go.group] = [];\n    }\n    gameObjectsByGroup[go.group].push(go);\n    // Add ID\n    gameObjectsByID[go.id] = go;\n    // Add to GameObject Name List\n    if (!gameObjectsByName[go.name]) {\n        gameObjectsByName[go.name] = [];\n    }\n    gameObjectsByName[go.name].push(go);\n    // Add the children\n    if (go.children && go.children.length > 0) {\n        go.children.forEach((child) => {\n            enrollGameObjectHelper(child, refArr);\n        });\n    }\n    return refArr;\n}\n\nfunction deleteGameObjectSync(go) {\n    if (!go) return;\n    if (!gameObjectsIDs.has(go.id)) return;\n    gameObjectsIDs.delete(go.id);\n    let toDel = null;\n\n    // Delete Entry in Array\n    for (let i = 0; i < gameObjects.length; i++) {\n        let item = gameObjects[i];\n        if (item.id === go.id) {\n            toDel = gameObjects[i];\n            gameObjectsIDs.delete(toDel.id);\n            delete gameObjectsByID[go.id];\n            // Remove from GameObject Name Array\n            for (let j = 0; j < gameObjectsByName[go.name].length; j++) {\n                if (gameObjectsByName[go.name][j].id === go.id) {\n                    gameObjectsByName[go.name].splice(j, 1);\n                    break;\n                }\n            }\n            // Remove from GameObject Group Array\n            for (let j = 0; j < gameObjectsByGroup[go.group].length; j++) {\n                if (gameObjectsByGroup[go.group][j].id === go.id) {\n                    gameObjectsByGroup[go.group].splice(j, 1);\n                    break;\n                }\n            }\n            toDel.beforeDestroy();\n            gameObjects.splice(i, 1);\n            break;\n        }\n    }\n\n    if (!toDel) return; // Item was not found\n\n    // Delete Parent's child instance (if any)\n    if (toDel.parent != null && toDel.parent.children && toDel.parent.children.length) {\n        for (let i = 0; i < toDel.parent.children.length; i++) {\n            let item = toDel.parent.children[i];\n            if (item.id === go.id) {\n                item.beforeDestroy();\n                toDel.parent.children.splice(i, 1);\n                break;\n            }\n        }\n    }\n\n    // Delete the Children from the Array\n    if (toDel.children && toDel.children.length) {\n        let idsToFind = {arr:[]}; // Encapsulating in a Object to get Pass by reference\n        for (let i = 0; i < toDel.children.length; i++) {\n            getChildIDs(toDel.children[i], idsToFind);\n        }\n        // Remove Children from the ID Set, and other things\n        for (let i = 0; i < idsToFind.arr.length; i++) {\n            let go = idsToFind.arr[i];\n            gameObjectsIDs.delete(go.id);\n            delete gameObjectsByID[go.id];\n            // Remove from GameObject Name Array\n            for (let j = 0; j < gameObjectsByName[go.name].length; j++) {\n                if (gameObjectsByName[go.name][j].id === go.id) {\n                    gameObjectsByName[go.name].splice(j, 1);\n                    break;\n                }\n            }\n            // Remove from GameObject Group Array\n            for (let j = 0; j < gameObjectsByGroup[go.group].length; j++) {\n                if (gameObjectsByGroup[go.group][j].id === go.id) {\n                    gameObjectsByGroup[go.group].splice(j, 1);\n                    break;\n                }\n            }\n        }\n        // Find in the GameObject Array and remove\n        for (let i = 0; i < gameObjects.length && idsToFind.arr.length > 0; i++) {\n            for (let j = 0; j < idsToFind.arr.length; j++) {\n                if (gameObjects[i].id === idsToFind.arr[j].id) {\n                    gameObjects[i].beforeDestroy();\n                    idsToFind.arr.splice(j, 1);\n                    gameObjects.splice(i, 1);\n                    i--;\n                    break;\n                }\n            }\n        }\n    }\n}\n\n// @TODO Fix this. It may call beforeDestroy many times. This is not intended!\nfunction deleteGameObject(go) {\n    // Done after the Loop, since we don't want to modify the array while it's being accessed\n    setTimeout(() => {\n        deleteGameObjectSync(go);\n    });\n}\n\n\n\n/**\n * Gets the IDs of all of the children\n * @param {GameObject} go GameObject to get the IDs of\n * @param {Object} idArr reference to an object encapsulating an array that the IDs will be added to\n */\nfunction getChildIDs(go, idArr) {\n    if (!idArr || idArr.arr === undefined) return;\n    // let toRet = [];\n    idArr.arr.push(go);\n    if (go.children && go.children.length) {\n        go.children.forEach((child) => {\n            getChildIDs(child, idArr);\n        });\n    }\n    return idArr.arr;\n}\n\n// Returns a reference to the GameObject by ID\nfunction getGameObjectByID(id) {\n    if (gameObjectsByID[id]) {\n        return gameObjectsByID[id];\n    }\n    return null;\n}\n\n// Return Gameobjects by name\nfunction getGameObjectByName(name) {\n    if (gameObjectsByName[name]) {\n        return gameObjectsByName[name];\n    }\n    return null;\n}\n\n// Return Gameobjects by group name\nfunction getGameObjectByGroup(group) {\n    if (gameObjectsByGroup[group]) {\n        return gameObjectsByGroup[group];\n    }\n    return null;\n}\n\nfunction main() {\n    stopLoop = window.requestAnimationFrame(main); // Puts this function into the message queue\n    loop();\n}\n\n// Game Loop\nfunction loop() {\n    // Update Delta Time\n    prevTime = currTime;\n    // currTime = window.performance.now();\n    currTime = (0,_Time_js__WEBPACK_IMPORTED_MODULE_1__.getTime)();\n    deltaTime = currTime - prevTime;\n\n    // Calculate the Absolute Transforms of each GameObject\n    (0,_Physics_js__WEBPACK_IMPORTED_MODULE_2__.calculateAbsoluteTransform)(gameObjects);\n\n    // Render the Game Field\n    // renderGameObjectsWith2dContext(gameObjects);\n\n    // Get Input\n    // pollGamepads();\n\n    // Update Network State (if active)\n    // checkPuppets();\n\n    // Run the GameObject Scripts\n    (0,_ScriptManager_js__WEBPACK_IMPORTED_MODULE_0__.processGameObjectScripts)(gameObjects);\n\n    // Do GameObject Physics\n\n    // Run loop functions\n    for (let i = 0; i < loopFuncs.length; i++) {\n        const f = loopFuncs[i];\n        f(engineInternals);\n    }\n\n    // @TODO Remove this\n    if (gameObjects.length > 10000 && !errorTypes.TenThousand) {\n        console.warn(\"Over 10 Thousand Objects\");\n        errorTypes.TenThousand = true;\n    } else if (gameObjects.length > 100000 && !errorTypes.HundredThousand) {\n        console.warn(\"Over 100 Thousand Objects\");\n        errorTypes.HundredThousand = true;\n    }\n\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Engine.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/GameObject.js":
/*!**************************************************!*\
  !*** ../../packages/jsge-core/src/GameObject.js ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameObject)\n/* harmony export */ });\n/* harmony import */ var _Transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Transform.js */ \"../../packages/jsge-core/src/Transform.js\");\n/* harmony import */ var _node_modules_uuid_dist_esm_browser_v4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/uuid/dist/esm-browser/v4.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/v4.js\");\n/**\n * Definitions for a GameObject\n */\n\n\n// import uuid from './UUID.js';\n\n\nclass GameObject {\n    constructor() {\n        // Public\n        this.scripts = [];\n        this.colliders = []; // @TODO Figure out a good way to build colliders\n        this.texture = null; // @TODO Add a texture here\n        this.transform = new _Transform_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](); // Position, Rotation, and Scale Relative to Parent, if any\n        this.children = []; // Child GameObjects whose transformation will be relative to that of this GameObject\n        this.name = \"\"; // Name of the GameObject\n        this.group = \"\"; // Name of the Group the GameObject belongs to\n\n        // Private @TODO find a way to trim out these variables from scripts\n        this.id = (0,_node_modules_uuid_dist_esm_browser_v4_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(); // This should be unique, as this is how the gameObject will be serialized\n        this.zIndex = 0; // Used for order of rendering in 2D\n        this.priority = 0; // Determines the priority of the scripts.\n        this.parent = null; // Contains reference to the Parent GameObject\n        // this.deleteFlag = false; // True if the GameObject should be destroyed.\n    }\n\n    // Attaches a GameObject to this GameObject\n    attachGameObject(go) {\n        go.parent = this;\n        this.children.push(go);\n    }\n\n    // Attaches a Script to this GameObject\n    attachScript(scr) {\n        scr.gameObject = this;\n        this.scripts.push(scr);\n        scr.init();\n    }\n\n    // Removes a Script already attached to this GameObject\n    detachScript(scr) {\n        if (scr.id) {\n            for (let i = 0; i < this.scripts.length; i++) {\n                let script = this.scripts[i];\n                if (script.id === scr.id) {\n                    this.scripts.splice(i, 1);\n                    script.onDestroy();\n                    return;\n                }\n            }\n        }\n    }\n\n    getScriptByID(id) {\n        for (let i = 0; i < this.scripts.length; i++) {\n            let script = this.scripts[i];\n            if (script.id === id) {\n                return script;\n            }\n        }\n    }\n\n    // Detaches a GameObject attached to this GameObject. Warning: This will make the child GameObject an orphan!\n    detachGameObject(go) {\n        go.parent = null;\n        for (let i = 0; i < this.children.length; i++) {\n            if (go.id === this.children[i].id) {\n                this.children.splice(i, 1);\n                return;\n            }\n        }\n    }\n\n    // Called before this GameObject is deleted\n    beforeDestroy() {\n        if (this.scripts && this.scripts.length) {\n            this.scripts.forEach((script) => {\n                script.onDestroy();\n            });\n        }\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/GameObject.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Physics.js":
/*!***********************************************!*\
  !*** ../../packages/jsge-core/src/Physics.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"calculateAbsoluteTransform\": () => (/* binding */ calculateAbsoluteTransform)\n/* harmony export */ });\n/* harmony import */ var _Transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Transform.js */ \"../../packages/jsge-core/src/Transform.js\");\n/**\n * Contains the function to calculate the absolute position of all GameObjects for each loop\n */\n\n\n\n// Calculates Absolute Transform object from Relative Transforms\nfunction calculateAbsoluteTransform(gos) {\n    gos.forEach((go) => {\n        let abs = new _Transform_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n        abs.deepCopy(go.transform);\n\n        if (go.parent) {\n            // Relative to the parent\n            let parent = go.parent.transform;\n            if (go.parent.absTransform) {\n                parent = go.parent.absTransform;\n            }\n            // Scale the position\n            abs.position.multiply(parent.scale);\n            abs.position.add(parent.position);\n            abs.rotation.add(parent.rotation); // @TODO Fix rotation\n            abs.scale.multiply(parent.scale);\n            go.absTransform = abs;\n        } else {\n            // Relative to the origin [(0,0,0), (0,0,0), (1,1,1)]\n            go.absTransform = abs;\n        }\n    });\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Physics.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Scene.js":
/*!*********************************************!*\
  !*** ../../packages/jsge-core/src/Scene.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Scene)\n/* harmony export */ });\n/* harmony import */ var _GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/**\n * A Scene contains the GameObjects for a particular part of the game.\n */\n\n\n\nclass Scene extends _GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.name = \"Scene\";\n    }\n\n    // Get all GameObjects from this scene\n    get gameObjects() {\n        let toRet = getGameObjectChildren(this);\n        toRet.push(this);\n        return toRet;\n    }\n}\n\nfunction getGameObjectChildren(go) {\n    let toRet = [];\n    if (go && go.children && go.children.length) {\n        go.children.forEach((child) => {\n            toRet.push(child);\n            let res = getGameObjectChildren(child);\n            if (res && res.length) {\n                res.forEach(item => toRet.push(item));\n            }\n        });\n    }\n    return toRet;\n}\n\n\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Scene.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Script.js":
/*!**********************************************!*\
  !*** ../../packages/jsge-core/src/Script.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"AsyncScript\": () => (/* binding */ AsyncScript),\n/* harmony export */   \"GameObjectWithScript\": () => (/* binding */ GameObjectWithScript),\n/* harmony export */   \"default\": () => (/* binding */ Script)\n/* harmony export */ });\n/* harmony import */ var _node_modules_uuid_dist_esm_browser_v4_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/uuid/dist/esm-browser/v4.js */ \"../../packages/jsge-core/node_modules/uuid/dist/esm-browser/v4.js\");\n/**\n * Interface for providing script functionality to GameObjects\n */\n\n// import uuid from './UUID.js';\n\n\nclass Script {\n    constructor(gameObject) {\n        this.gameObject = gameObject; // Reference to the GameObject that this script is attached to\n        this.id = (0,_node_modules_uuid_dist_esm_browser_v4_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\n    }\n\n    // Override this to initialize a script\n    init() {\n\n    }\n\n    // Override this to perform a check during the gameLoop\n    loop() {\n\n    }\n\n    // Override this to do Physics stuff\n    physicsLoop() {\n\n    }\n\n    // Called before the object is destroyed\n    onDestroy() {\n\n    }\n}\n\nconst AsyncScript = Base => class extends Base {\n    // override this to get an async Loop\n    async asyncLoop() {\n\n    }\n\n    // Removes access to sync loop so that we can so async stuff\n    loop() {\n        // Execute the syncronous loop first, if there is one\n        if (super.loop) {\n            super.loop();\n        }\n        setTimeout(async () => {\n            this.asyncLoop();\n        });\n    }\n}\n\n// Provide a class misin that allows all code for a GameObject to be in one place\nconst GameObjectWithScript = Base => class extends Base {\n    constructor() {\n        super();\n        this.internalScript = new Script();\n        // Binding to the new 'this' is a must for inheritance to work properly\n        this.internalScript.init = this.init.bind(this);\n        this.internalScript.loop = this.loop.bind(this);\n        this.internalScript.physicsLoop = this.physicsLoop.bind(this);\n        this.internalScript.onDestroy = this.onDestroy.bind(this);\n        this.scripts.push(this.internalScript);\n        this.gameObject = this;\n    }\n\n    init() { }\n\n    loop() { }\n\n    physicsLoop() { }\n\n    onDestroy() { }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Script.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/ScriptManager.js":
/*!*****************************************************!*\
  !*** ../../packages/jsge-core/src/ScriptManager.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initGameObjectScripts\": () => (/* binding */ initGameObjectScripts),\n/* harmony export */   \"processGameObjectScripts\": () => (/* binding */ processGameObjectScripts)\n/* harmony export */ });\n/**\n * Contains all functions required to manage scripts\n */\n\n// Calls all Script Loop Functions\nfunction processGameObjectScripts(gos) {\n    gos.forEach((go) => {\n        if (go.scripts && go.scripts.length) {\n            go.scripts.forEach((script) => {\n                script.loop();\n            });\n        }\n    });\n}\n\nfunction initGameObjectScripts(gos) {\n    gos.forEach((go) => {\n        if (go.scripts && go.scripts.length) {\n            go.scripts.forEach((script) => {\n                script.init();\n            });\n        }\n    });\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/ScriptManager.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Serialize.js":
/*!*************************************************!*\
  !*** ../../packages/jsge-core/src/Serialize.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"GAMEOBJECT_BLACKLIST\": () => (/* binding */ GAMEOBJECT_BLACKLIST),\n/* harmony export */   \"SCRIPT_BLACKLIST\": () => (/* binding */ SCRIPT_BLACKLIST),\n/* harmony export */   \"defaultDeserializer\": () => (/* binding */ defaultDeserializer),\n/* harmony export */   \"defaultSerializer\": () => (/* binding */ defaultSerializer),\n/* harmony export */   \"defaultStateUpdater\": () => (/* binding */ defaultStateUpdater),\n/* harmony export */   \"deserialize\": () => (/* binding */ deserialize),\n/* harmony export */   \"getConstructor\": () => (/* binding */ getConstructor),\n/* harmony export */   \"getKeys\": () => (/* binding */ getKeys),\n/* harmony export */   \"makeSerializable\": () => (/* binding */ makeSerializable),\n/* harmony export */   \"serialize\": () => (/* binding */ serialize),\n/* harmony export */   \"update\": () => (/* binding */ update)\n/* harmony export */ });\n/**\n * Contains all functionality to Serialize and Deserialize GameObjects and Scripts for saving to a file, or sending over a network connection\n */\n\nconst serialTypes = {}; // Stores all Serializable types (Both GameObjects and Scripts), as well as functions to serialize and deserialize them\n\nconst GAMEOBJECT_BLACKLIST = [\"texture\"];\n\nconst SCRIPT_BLACKLIST = [\"init\", \"loop\"];\n\n// Default Serializer function\n/**\n * Default Serializer function\n * \n * The Default Serializer will not perform 'Deep Serialization', where keys that are Arrays/Objects/etc. would be serialized. \n * If this functionality is needed, consider writing a custom serializer.\n * @param {Array} keys Keys of the object to save\n * @returns {Function} Serializer function\n */\nfunction defaultSerializer(keys, serializeChildren) {\n    /**\n     * Serializer function\n     * @param {Object} Object to Serialize\n     * @param {Boolean} serializeChildren True if the children should be serialized\n     * @returns {Object} Serialized Object\n     */\n    return (obj) => {\n        let toRet = {};\n        let data = {};\n        let serKeys = {};\n        toRet.type = obj.constructor.name;\n        if (obj && keys && keys.length > 0) {\n            keys.forEach((key) => {\n                \n                let value = Reflect.get(obj, key);\n\n                // Don't overwrite functions\n                if (value instanceof Function) {\n                    return;\n                }\n\n                if (value && value.constructor && value.constructor.name) {\n                    let name = value.constructor.name;\n                    console.log(\"Name:\", name);\n                    // Note: This only serializes the value if it is not in an Array/Object/etc.\n                    if (serializeChildren && serialTypes[name]) {\n                        data[key] = serialTypes[name].serializer(value);\n                    } else {\n                        data[key] = value;\n                    }\n                } else {\n                    data[key] = value;\n                }\n            });\n        }\n        toRet.data = data;\n        return toRet;\n    }\n}\n\n/**\n * Default De-Serializer Function\n * @param {Array} keys Keys to use in deserialization\n * @param {Class} classRef Reference to the class constructor\n * @returns {Function} Function used to deserialize an object\n */\nfunction defaultDeserializer(keys, classRef) {\n    /**\n     * Deserializes an Object, given the serial data\n     * @param {Object} json Serial Data\n     * @returns {Object} Deserialized object\n     */\n    return (json) => {\n        let obj = new classRef(); // Hopefully the contructor does not need parameters\n        // @TODO Fix handling of functions (don't allow them to be overwritten), and NULL or undefined fields coming in\n        Object.keys(json).forEach((key) => {\n            if (!json[key]) delete json[key];\n        })\n\n        defaultStateUpdater(obj, json, keys);\n        return obj;\n    }\n}\n\n// Updates the state of an object\nfunction defaultStateUpdater(obj, state, keys) {\n    if (keys) {\n        Object.keys(state).forEach((key) => {\n            if (keys.indexOf(key) > -1) {\n                Reflect.set(obj, key, state[key]);\n            }\n        });\n    } else {\n        Object.keys(state).forEach((key) => {\n            Reflect.set(obj, key, state[key]);\n        });\n    }\n    return obj;\n}\n\n// Get Keys from a class\nfunction getKeys(classRef, blacklist) {\n    // Construct the class\n    let obj = new classRef();\n\n    // Get Keys\n    let keys = Reflect.ownKeys(obj);\n\n    // Check against blacklist\n    if (blacklist && blacklist.length > 0) {\n        blacklist.forEach((blkey) => {\n            let idx = keys.indexOf(blkey);\n            if (idx >= 0) {\n                keys.splice(idx, 1);\n            }\n        });\n    }\n\n    return keys;\n}\n\n// Makes a GameObject or Script Serializable\nfunction makeSerializable(classRef, serializer, deserializer, stateUpdater) {\n    let name = classRef.name;\n    if (!serialTypes[name]) {\n        let toAdd = {};\n        toAdd.classRef = classRef; // Reference to the Constructor\n        toAdd.serializer = serializer;\n        toAdd.deserializer = deserializer;\n        toAdd.stateUpdater = stateUpdater;\n        serialTypes[name] = toAdd;\n    }\n}\n\n// Serializes a GameObject or Script\nfunction serialize(serObj, serializeChildren = true, typeName) {\n    let name = typeName || serObj.constructor.name;\n    let type = serialTypes[name];\n    let toRet = {};\n\n    if (!type) {\n        console.error(\"Cannot Serialize: Not in List!\", serObj);\n        throw new Error(\"Cannot Serialize: Not in List\");\n    }\n\n    toRet.type = name;\n    toRet.data = type.serializer(serObj, serializeChildren);\n\n    return toRet;\n}\n\n// Deserializes parsed JSON and returns all parsed GameObjects\nfunction deserialize(json, typeName) {\n    let name = typeName || json.type;\n    let type = serialTypes[name];\n    let toRet = null;\n\n    if (!type) {\n        console.error(\"Cannot Deserialize: Not in List!\");\n        throw new Error(\"Cannot Deserialize: Not in List\");\n    }\n\n    toRet = type.deserializer(json.data);\n\n    return toRet;\n}\n\n// Updates a GameObject with a given state (Like Deserialize, but the object is not instanciated)\nfunction update(obj, state, typeName) {\n    let name = typeName || state.type;\n    let type = serialTypes[name];\n\n    if (!type) {\n        console.error(\"Cannot Update State: Not in List!\");\n        throw new Error(\"Cannot Update State: Not in List\");\n    }\n\n    return type.stateUpdater(obj, state.data);\n}\n\nfunction getConstructor(type) {\n    return serialTypes[type] && serialTypes[type].classRef;\n}\n\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Serialize.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Time.js":
/*!********************************************!*\
  !*** ../../packages/jsge-core/src/Time.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"advanceTime\": () => (/* binding */ advanceTime),\n/* harmony export */   \"getTime\": () => (/* binding */ getTime),\n/* harmony export */   \"isTimePaused\": () => (/* binding */ isTimePaused),\n/* harmony export */   \"pauseTime\": () => (/* binding */ pauseTime),\n/* harmony export */   \"unpauseTime\": () => (/* binding */ unpauseTime)\n/* harmony export */ });\n/**\n * Contains all functions related to getting time. Also provides methods for pausing time for debugging.\n */\n\nlet timeDiff = 0; // Difference between the actual time, and what should be reported to the game\nlet timePaused = 0;\nlet isPaused = false;\n\n/**\n * Get the current Game Time\n */\nfunction getTime() {\n    if (isPaused) return timePaused;\n    return window.performance.now() - timeDiff;\n}\n\nfunction pauseTime() {\n    isPaused = true;\n    timePaused = window.performance.now();\n}\n\n/**\n * Advance time While paused for debugging\n * @param {Number} amt Amount to advance the time\n */\nfunction advanceTime(amt) {\n    if (!isPaused || !amt || amt <= 0) return;\n    timePaused += amt;\n}\n\nfunction unpauseTime() {\n    if (!isPaused) return;\n    isPaused = false;\n    timeDiff += window.performance.now() - timePaused;\n    timePaused = 0;\n}\n\nfunction isTimePaused() {\n    return isPaused;\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Time.js?");

/***/ }),

/***/ "../../packages/jsge-core/src/Transform.js":
/*!*************************************************!*\
  !*** ../../packages/jsge-core/src/Transform.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Three\": () => (/* binding */ Three),\n/* harmony export */   \"default\": () => (/* binding */ Transform)\n/* harmony export */ });\n/**\n * A Transform hold position, rotation, and Scale data for an object\n * @TODO Rewrite to use gl-matrix behind the scenes\n */\n\nclass Transform {\n    constructor() {\n        this.position = new Three(0, 0, 0);\n        this.rotation = new Three(0, 0, 0);\n        this.scale = new Three(1, 1, 1);\n    }\n\n    deepCopy(transform) {\n        this.position = new Three(transform.position.x, transform.position.y, transform.position.z);\n        this.rotation = new Three(transform.rotation.x, transform.rotation.y, transform.rotation.z);\n        this.scale = new Three(transform.scale.x, transform.scale.y, transform.scale.z);\n    }\n\n    // @TODO Figure out a way to get coordinates for rendering things\n}\n\n/**\n * Stores 3 PArameters that make up a point in 3D space\n */\n\nclass Three {\n    constructor(x, y, z) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n    }\n\n    add(vec) {\n        this.x += vec.x;\n        this.y += vec.y;\n        this.z += vec.z;\n    }\n\n    subtract(vec) {\n        this.x -= vec.x;\n        this.y -= vec.y;\n        this.z -= vec.z;\n    }\n\n    scale(num) {\n        this.x *= num;\n        this.y *= num;\n        this.z *= num;\n    }\n\n    subtract(vec) {\n        this.x -= vec.x;\n        this.y -= vec.y;\n        this.z -= vec.z;\n    }\n\n    multiply(vec) {\n        this.x *= vec.x;\n        this.y *= vec.y;\n        this.z *= vec.z;\n    }\n    \n    // Returns an Array that can be used with WebGL\n    getArr() {\n        return [this.x, this.y, this.z];\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-core/src/Transform.js?");

/***/ }),

/***/ "../../packages/jsge-module-audio/src/Audio.js":
/*!*****************************************************!*\
  !*** ../../packages/jsge-module-audio/src/Audio.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   \"getAudioContext\": () => (/* binding */ getAudioContext),\n/* harmony export */   \"initAudio\": () => (/* binding */ initAudio)\n/* harmony export */ });\n/* harmony import */ var _EffectsContainer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./EffectsContainer.js */ \"../../packages/jsge-module-audio/src/EffectsContainer.js\");\n/* harmony import */ var _Player_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Player.js */ \"../../packages/jsge-module-audio/src/Player.js\");\n/**\n * Audio Module. Contains jmod, and some demos\n */\n\n \n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    name: \"Audio\",\n    version: 0,\n    init: () => {\n        initAudio();\n    },\n    loop: () => {}\n});\n\nlet audioContext = null;\n\nfunction initAudio() {\n    audioContext = new AudioContext();\n    console.log(audioContext);\n    // @TODO init mixer\n}\n\nfunction getAudioContext() {\n    return audioContext;\n}\n\nfunction devDemo () {\n    const asset = \"/asset/final.wav\";\n    let ap = new _Player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](asset);\n    ap.play(true);\n    return ap;\n}\n\nfunction devDemo2(ap) {\n    const eff = new _EffectsContainer_js__WEBPACK_IMPORTED_MODULE_0__.BaseEffect(audioContext.createGain());\n    ap.effects.add(eff);\n}\n\nfunction devDemo3() {\n    let ap = new _Player_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"/asset/test.wav\");\n    return ap;\n}\n\nwindow.devDemo = devDemo;\nwindow.devDemo2 = devDemo2;\nwindow.devDemo3 = devDemo3;\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-audio/src/Audio.js?");

/***/ }),

/***/ "../../packages/jsge-module-audio/src/EffectsContainer.js":
/*!****************************************************************!*\
  !*** ../../packages/jsge-module-audio/src/EffectsContainer.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"BaseEffect\": () => (/* binding */ BaseEffect),\n/* harmony export */   \"Effect\": () => (/* binding */ Effect),\n/* harmony export */   \"default\": () => (/* binding */ EffectsContainer)\n/* harmony export */ });\n/* harmony import */ var _node_modules_nanoid_index_browser_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/nanoid/index.browser.js */ \"../../packages/jsge-module-audio/node_modules/nanoid/index.browser.js\");\n/**\n * Manages plugging and unplugging effects from a track on the fly\n */\n\n// import uuid from '../UUID.js';\n\n\nconst ID_LEN = 8;\n\nclass EffectsContainer {\n    constructor(source, destination) {\n        this.effectsArray = []; // Array of effects to be applied\n        this.source = source; // Source Audio Track\n        this.destination = destination; // Destination Audio Track\n        this.source.connect(this.destination);\n    }\n\n    // Inserts an effect at a specific index\n    insert = (effect, idx) => {\n        if (idx >= this.effectsArray.length || idx < 0) {\n            throw new Error(\"Index out of bounds\");\n        }\n        \n        // Find Prev and Next in Effects Chain\n        let prev = null, next = null;\n\n        let curr = effect.getEffect();\n\n        if (this.effectsArray.length === 0) {\n            prev = this.source;\n            next = this.destination;\n        } else if (idx === 0) {\n            prev = this.source;\n            next = this.effectsArray[0].getEffect();\n        } else if (idx === this.effectsArray.length) {\n            prev = this.effectsArray[idx].getEffect();\n            next = this.destination;\n        } else {\n            prev = this.effectsArray[idx - 1].getEffect();\n            next = this.effectsArray[idx].getEffect();\n        }\n\n        // Break Prev and Next connection\n        prev.disconnect(next);\n\n        // Add the new Effect to the array\n        this.effectsArray.splice(idx, 0, effect);\n\n        console.log(prev, next);\n\n        // Connect the new Effect, nd re-connect to the chain\n        prev.connect(curr);\n        curr.connect(next);\n    }\n\n    add = (effect) => {\n        // Find Prev and Next in Effects Chain\n        let prev = null, next = null;\n\n        let curr = effect.getEffect();\n\n        if (this.effectsArray.length === 0) {\n            prev = this.source;\n            next = this.destination;\n        } else {\n            prev = this.effectsArray[this.effectsArray.length - 1].getEffect();\n            next = this.destination;\n        }\n\n        prev.disconnect(next);\n\n        this.effectsArray.push(effect);\n\n        console.log(prev, curr, next);\n\n        prev.connect(curr);\n        curr.connect(next);\n    }\n\n    get length() {\n        return this.effectsArray.length;\n    }\n\n    getEffectByID = (id) => {\n        for (const e of this.effectsArray) {\n            if (e.id === id) {\n                return e;\n            }\n        }\n    }\n\n    getEffectIndexByID = (id) => {\n        for (let i = 0; i < this.effectsArray.length; i++) {\n            const e = this.effectsArray[i];\n            if (e.id === id) {\n                return i;\n            }\n        }\n    }\n\n    remove = (effect) => {\n        for (let i = 0; i < this.effectsArray.length; i++) {\n            const e = this.effectsArray[i];\n            if (e.id === effect.id || e.id === effect) {\n                console.log(\"Index:\", i);\n                // Disconnect the effect\n                let prev = null, next = null;\n\n                let curr = e.getEffect();\n\n                if (this.effectsArray.length === 1) {\n                    prev = this.source;\n                    next = this.destination;\n                } else if (i === 0) {\n                    prev = this.source;\n                    next = this.effectsArray[i + 1].getEffect();\n                } else if (i === this.effectsArray.length - 1) {\n                    prev = this.effectsArray[i - 1].getEffect();\n                    next = this.destination;\n                } else {\n                    prev = this.effectsArray[i - 1].getEffect();\n                    next = this.effectsArray[i + 1].getEffect();\n                }\n\n                prev.disconnect(curr);\n                curr.disconnect(next);\n                prev.connect(next);\n\n                this.effectsArray.splice(i, 1);\n                \n                return;\n            }\n        }\n    }\n\n\n}\n\n// Wraps around an AudioNode-based processing module\nclass Effect {\n    constructor() {\n        // this.id = uuid();\n        this.id = (0,_node_modules_nanoid_index_browser_js__WEBPACK_IMPORTED_MODULE_0__.nanoid)(ID_LEN);\n    }\n\n    // // connects a source and destination\n    // connect(src, dest) {\n\n    // }\n\n    // // disconnects this effect when shuffling things around\n    // disconnect(dest) {\n\n    // }\n\n    getEffect() {\n        return null;\n    }\n}\n\n// Wraps around an AudioNode\nclass BaseEffect extends Effect {\n    /**\n     * Constructor\n     * @param {AudioNode} effect Node to connect to the EffectsContainer\n     */\n    constructor(effect) {\n        super();\n        this.effect = effect;\n    }\n\n    getEffect() {\n        return this.effect;\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-audio/src/EffectsContainer.js?");

/***/ }),

/***/ "../../packages/jsge-module-audio/src/Player.js":
/*!******************************************************!*\
  !*** ../../packages/jsge-module-audio/src/Player.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AudioPlayer)\n/* harmony export */ });\n/* harmony import */ var _Audio_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Audio.js */ \"../../packages/jsge-module-audio/src/Audio.js\");\n/* harmony import */ var _EffectsContainer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EffectsContainer.js */ \"../../packages/jsge-module-audio/src/EffectsContainer.js\");\n/**\n * Plays an audio file\n */\n\n\n\n\nclass AudioPlayer {\n\n    constructor(fname) {\n        const audioContext = (0,_Audio_js__WEBPACK_IMPORTED_MODULE_0__.getAudioContext)();\n        this.audio = new Audio(fname);\n        this.track = audioContext.createMediaElementSource(this.audio);\n        this.effects = new _EffectsContainer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](this.track, audioContext.destination);\n        // this.track.connect(audioContext.destination);\n        this.playing = false;\n    }\n\n    play = (rate, loop) => {\n        const audioContext = (0,_Audio_js__WEBPACK_IMPORTED_MODULE_0__.getAudioContext)();\n\n        // Fixes audio not playing when page loads due to permissions\n        if (audioContext.state === 'suspended') {\n            audioContext.resume();\n        }\n\n        if (this.audio.ended) {\n            this.playing = false;\n        }\n\n        if (!this.playing) {\n            this.playing = true;\n            if (loop) {\n                this.audio.loop = true;\n            }\n            if (rate) {\n                this.audio.playbackRate = rate;\n            }\n            this.audio.play();\n        } else {\n            console.log(\"not playing\");\n        }\n    }\n\n    pause = () => {\n        if (this.playing) {\n            this.playing = false;\n            this.audio.pause();\n        }\n    }\n\n    stop = () => {\n        if (this.playing) {\n            this.playing = false;\n            this.audio.pause();\n            this.audio.currentTime = 0;\n        }\n    }\n\n    getTime = () => {\n        return this.audio.currentTime;\n    }\n\n    getDuration = () => {\n        return this.audio.duration;\n    }\n\n    getPlaybackRate = () => {\n        return this.audio.playbackRate;\n    }\n\n    isMuted = () => {\n        this.audio.muted;\n    }\n\n    isLooping = () => {\n        return this.audio.loop;\n    }\n\n    mute = (mute) => {\n        this.audio.muted = mute;\n    }\n\n    loop = (loop) => {\n        this.audio.loop = loop;\n    }\n\n    setTime = (time) => {\n        return this.audio.currentTime = time;\n    }\n\n    setPlaybackRate = (rate) => {\n        this.audio.playbackRate = rate;\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-audio/src/Player.js?");

/***/ }),

/***/ "../../packages/jsge-module-basic-physics/src/Physics.js":
/*!***************************************************************!*\
  !*** ../../packages/jsge-module-basic-physics/src/Physics.js ***!
  \***************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"jmod\": () => (/* binding */ jmod),\n/* harmony export */   \"processColliders\": () => (/* binding */ processColliders)\n/* harmony export */ });\n/**\n * Handles Physics Calculations for all GameObjects, as well as updating Relative Transforms\n */\n\nconst jmod = {\n    name: \"Physics\",\n    version: 0,\n    loop: (internals) => {\n        processColliders(internals.gameObjects);\n    }\n}\n\n// Processes Collisions\nfunction processColliders(gos) {\n    let colliders = [];\n    gos.forEach((go) => {\n        if (go.colliders && go.colliders.length > 0) {\n            colliders.push(...go.colliders);\n        }\n    });\n\n    // @TODO Use a QuadTree here or something to speed this up\n\n    \n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-basic-physics/src/Physics.js?");

/***/ }),

/***/ "../../packages/jsge-module-debug/src/Debug.js":
/*!*****************************************************!*\
  !*** ../../packages/jsge-module-debug/src/Debug.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"initDebug\": () => (/* binding */ initDebug),\n/* harmony export */   \"jmod\": () => (/* binding */ jmod),\n/* harmony export */   \"serializeForDebug\": () => (/* binding */ serializeForDebug)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/jsge-core/src/Serialize.js */ \"../../packages/jsge-core/src/Serialize.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/**\n * Contains interfaces to assist with Debugging\n */\n\n// import { defineKey, TYPE_DIGITAL, setKeyOnNextInput, getAllKeys, setKeybindings } from './Input.js';\n\n// import { defaultSerializer, defaultDeserializer, defaultStateUpdater, getKeys, makeSerializable, serialize, deserialize } from './Serialize.js';\n\n// import { initDebug as engineDebug } from './Engine.js';\n\n\n// import { defineKey, TYPE_DIGITAL, setKeyOnNextInput, getAllKeys, setKeybindings } from './Input.js';\n\n\n\n\n\nconst jmod = {\n    name: \"Debug Interface\",\n    version: 0,\n    init: () => initDebug()\n};\n\nfunction initDebug() {\n    window.debug = {};\n    // Controller\n    // window.debug.input = {};\n    // window.debug.input.defineKey = defineKey;\n    // window.debug.input.TYPE_DIGITAL = TYPE_DIGITAL;\n    // window.debug.input.setKeyOnNextInput = setKeyOnNextInput;\n    // window.debug.input.getAllKeys = getAllKeys;\n    // window.debug.input.setKeybindings = setKeybindings;\n    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.initDebug)();\n\n    // Serialization\n    let ser = {};\n    ser.defaultSerializer = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.defaultSerializer;\n    ser.defaultDeserializer = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.defaultDeserializer;\n    ser.defaultStateUpdater = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.defaultStateUpdater;\n    ser.getKeys = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.getKeys;\n    ser.makeSerializable = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.makeSerializable;\n    ser.serialize = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.serialize;\n    ser.deserialize = _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.deserialize;\n    window.debug.serialize = ser;\n\n    window.debug.interface = {};\n    window.debug.interface.start = () => {\n        let ret = window.open(window.CONFIG.debugui || \"/debug.html\");\n        window.debug.interface.ref = ret;\n    }\n    initDebugInterface();\n\n    window.debug.location = window.location.href;\n}\n\n// Handles communication between the debug window and the Game Engine\nfunction initDebugInterface() {\n    window.addEventListener(\"message\", (e) => {\n        if (e.origin.startsWith(window.CONFIG.debugui)) {\n            console.log(e);\n            console.log(e.data);\n            let res = handleMessage(e.data);\n            console.log(\"Returned data:\", res);\n            if (res) {\n                let msgToSend = {\n                    number: e.data.number || undefined,\n                    data: res\n                }\n                e.source.postMessage(msgToSend, window.CONFIG.debugui);\n            }\n        } else {\n            console.warn(\"Got message from unexpected source. Do you have the correct CONFIG URL for debugui?\", e.origin);\n        }\n    })\n}\n\n// Handles the message from the Debug Window and returns the data to send back\nfunction handleMessage(data) {\n    if (data.type === \"GET\") {\n        let pathSplit = data.data.var;\n        let rootObj = null;\n        let blacklist = data.data.blacklist || null;\n        let maxDepth = data.data.maxDepth || -1;\n        if (data.data.from === \"gameObject\") {\n            rootObj = window.debug.engine.getGameObjectByID(data.data.select);\n            // Add a default blacklist\n            if (pathSplit.length === 0) {\n                blacklist = [\"parent\"];\n            }\n        } else {\n            rootObj = window.debug[data.data.from];\n        }\n        if (rootObj) {\n            let result = rootObj;\n            pathSplit.forEach((item) => {\n                result = result[item];\n            });\n            console.log(\"Got:\", result);\n            return serializeForDebug(result, blacklist, maxDepth);\n        }\n    } else if (data.type === \"SET\") {\n        let pathSplit = data.data.var;\n        let rootObj = null;\n        if (data.data.from === \"gameObject\") {\n            rootObj = window.debug.engine.getGameObjectByID(data.data.select);\n        } else {\n            rootObj = window.debug[data.data.from];\n        }\n        if (rootObj) {\n            let result = rootObj;\n            // Take the last Index, since it could be an Array\n            let lastIndex = pathSplit.pop();\n            pathSplit.forEach((item) => {\n                result = result[item];\n            });\n            let newData = data.data.data;\n            // Use the asset loader to load something in\n            if (data.data.asset) {\n                // @TODO Implement Asset Loading here\n            }\n            if (data.data.type === \"push\") {\n                result[lastIndex].push(newData);\n            } else if (data.data.type === \"insert\") {\n                result.splice(lastIndex, 0, newData);\n            } else if (data.data.type === \"delete\") {\n                if (typeof result === \"object\" && Array.isArray(result)) {\n                    result.splice(lastIndex, 1);\n                } else {\n                    delete result[lastIndex];\n                }\n            } else {\n                // Replace\n                result[lastIndex] = newData;\n            }\n            return result;\n        }\n    } else if (data.type === \"ACTION\") {\n        let pathSplit = data.data.var;\n        let rootObj = null;\n        if (data.data.from === \"gameObject\") {\n            rootObj = window.debug.engine.getGameObjectByID(data.data.select);\n        } else {\n            rootObj = window.debug[data.data.from];\n        }\n        if (rootObj) {\n            let result = rootObj;\n            pathSplit.forEach((item) => {\n                result = result[item];\n            });\n            console.log(\"Result:\", typeof result, result);\n            if (typeof result === \"function\") {\n                if (data.data.params) {\n                    return serializeForDebug(result(...data.data.params));\n                }\n                return serializeForDebug(result());\n            }\n        }\n    } else if (data.type === \"PING\") {\n        return true;\n    }\n}\n\n// MAkes a GameObject or whatever serializable. Also can blacklist keys in an object\nfunction serializeForDebug(source, blacklist = [], maxDepth = -1) {\n    let visited = [];\n    let visitedKeys = []; // Stores the keys of the visited Objects\n    let extra = [];\n    function helper(root, pathArr, depth) {\n        console.log(\"helper:\", root, pathArr);\n        // Check Max Depth\n        if (maxDepth >= 0 && depth > maxDepth) return;\n        // Check Blacklist\n        // if (blacklist && pathArr.length === 1 && blacklist.indexOf(pathArr[0]) >= 0) {\n        //     return;\n        // }\n        if (blacklist) {\n            // Block all instances of a key\n            if (!blacklist.length && blacklist.indexOf(pathArr[0]) >= 0) {\n                return;\n            }\n            if (blacklist.length && blacklist.length === pathArr.length) {\n                let match = false;\n                for (let i = 0; i < blacklist.length && i < pathArr.length; i++) {\n                    if (pathArr[i] === blacklist[i]) {\n                        match = true;\n                    } else {\n                        match = false;\n                        break;\n                    }\n                }\n                if (match) {\n                    return;\n                }\n            }\n        }\n        if (!root && root !== 0) return;\n        // Check if this is a constructed object that we're handling separately\n        if (typeof root === \"object\" && root.constructor && constructorTypes[root.constructor.name]) {\n            extra.push({\n                key: pathArr,\n                type: \"constructed\",\n                constructor: root.constructor.name,\n                data: constructorTypes[root.constructor.name](root)\n            });\n            return;\n        } else if (typeof root === \"object\" && !Array.isArray(root)) {\n            let newObj = {};\n            if (visited.indexOf(root) === -1) {\n                visited.push(root);\n                visitedKeys.push(pathArr);\n                let keys = Reflect.ownKeys(root);\n                keys.forEach((key) => {\n                    let value = root[key];\n                    newObj[key] = helper(value, pathArr.concat([key]), depth + 1);\n                });\n                return newObj;\n            } else {\n                let idx = visited.indexOf(root);\n                let key = visitedKeys[idx];\n                extra.push({\n                    key: pathArr,\n                    type: \"ref\",\n                    to: key\n                });\n                return;\n            }\n        } else if (typeof root === \"object\" && Array.isArray(root)) {\n            let newObj = [];\n            root.forEach((item, index) => {\n                newObj.push(helper(item, pathArr.concat([index]), depth + 1));\n            });\n            return newObj;\n        } else if (typeof root === \"function\") {\n            extra.push({\n                key: pathArr,\n                type: \"function\"\n            });\n            return;\n        } else {\n            return root;\n        }\n    }\n    let data = helper(source, [], 0);\n    if (source && source.constructor && source.constructor.name) {\n        return {\n            constructor: source.constructor.name,\n            data: data,\n            extra: extra\n        };\n    }\n    return {\n        data: data,\n        extra: extra\n    };\n}\n\n// Handles serializing certain JS classes, such as Images\n\nconst constructorTypes = {\n    HTMLImageElement: (data) => {\n        console.log(\"Image Deconstructor\", data);\n        if (data.src) {\n            return {\n                url: data.src\n            }\n        }\n    }\n}\n\nwindow.serializeForDebug = serializeForDebug;\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-debug/src/Debug.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/Camera/Camera.js":
/*!******************************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/Camera/Camera.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Camera\": () => (/* binding */ Camera)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/jsge-core/src/GameObject.js */ \"../../packages/jsge-core/src/GameObject.js\");\n/* harmony import */ var _Render_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Render.js */ \"../../packages/jsge-module-graphics2d/src/Render.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"../../packages/jsge-module-graphics2d/src/constants.js\");\n/**\n * Provides an interface to control the canvas transform and rotation\n */\n\n// import CameraBehavior from './CameraBehavior.js';\n// import GameObject from '../GameObject.js';\n\n\n\n\n\n\nclass Camera extends (0,_Render_js__WEBPACK_IMPORTED_MODULE_1__.Renderable)(_node_modules_jsge_core_src_GameObject_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]) {\n    constructor() {\n        super();\n        this.id = _constants_js__WEBPACK_IMPORTED_MODULE_2__.CAMERA_ID; // There should only ever be ONE camera\n        this.name = \"Camera\";\n        // this.attachScript(new CameraBehavior(this));\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/Camera/Camera.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/Camera/RenderScript.js":
/*!************************************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/Camera/RenderScript.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RenderScript)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/jsge-core/src/Script.js */ \"../../packages/jsge-core/src/Script.js\");\n/**\n * Contains an extension to Script for use with Rendering directly to the canvas\n */\n\n// import Script from '../Script.js';\n\n\n\nclass RenderScript extends _node_modules_jsge_core_src_Script_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    // Override this to render things directly to the canvas\n    render(context, width, height) {\n\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/Camera/RenderScript.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/Render.js":
/*!***********************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/Render.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Renderable\": () => (/* binding */ Renderable),\n/* harmony export */   \"deg2rad\": () => (/* binding */ deg2rad),\n/* harmony export */   \"initializeWith2dContext\": () => (/* binding */ initializeWith2dContext),\n/* harmony export */   \"initializeWithWebGL\": () => (/* binding */ initializeWithWebGL),\n/* harmony export */   \"jmod\": () => (/* binding */ jmod),\n/* harmony export */   \"jmodWebGL\": () => (/* binding */ jmodWebGL),\n/* harmony export */   \"renderGameObjectsWith2dContext\": () => (/* binding */ renderGameObjectsWith2dContext),\n/* harmony export */   \"renderGameObjectsWithWebGL\": () => (/* binding */ renderGameObjectsWithWebGL),\n/* harmony export */   \"setCanvas\": () => (/* binding */ setCanvas)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/jsge-core/src/Transform.js */ \"../../packages/jsge-core/src/Transform.js\");\n/* harmony import */ var _Camera_RenderScript_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Camera/RenderScript.js */ \"../../packages/jsge-module-graphics2d/src/Camera/RenderScript.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"../../packages/jsge-module-graphics2d/src/constants.js\");\n/* harmony import */ var _Render_WebGLHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Render/WebGLHelper.js */ \"../../packages/jsge-module-graphics2d/src/Render/WebGLHelper.js\");\n/**\n * Renders the GameObjects from the Engine\n */\n\n// import Transform from './Transform.js';\n\n\n\n\n\n\nlet canvas = null;\nlet context = null; // This is the context that will be used to render the game.\n\nconst jmod = {\n    name: \"Render\",\n    version: 0,\n    init: initializeWith2dContext,\n    loop: (internals) => {\n        renderGameObjectsWith2dContext(internals.gameObjects);\n    }\n}\n\nconst jmodWebGL = {\n    name: \"RenderWebGL\",\n    version: 0,\n    init: initializeWithWebGL,\n    loop: (internals) => {\n        renderGameObjectsWithWebGL(internals.gameObjects);\n    }\n}\n\nfunction setCanvas(node) {\n    canvas = node;\n}\n\n// 2d context stuff\n\nfunction initializeWith2dContext() {\n    if (!canvas) {\n        throw new Error(\"Error: Canvas must be set before initializing Render!\");\n    }\n    context = canvas.getContext('2d');\n    if (!context) {\n        let msg = \"Error Initializing the 2d context!\";\n        console.error(msg);\n        throw new Error(msg)\n    }\n    context.imageSmoothingEnabled = false;\n}\n\n// export function renderGameObjectsWith2dContext(gos) {\n//     context.save(); // Saves the transform and such\n//     context.setTransform(1,0,0,1,0,0);\n//     context.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n//     context.restore();\n//     gos.forEach((go) => {\n//         if (go.renderScripts) {\n//             // Check if this is a Renderable G.O\n//             go.renderScripts.forEach((rs) => {\n//                 rs.render(context, canvas.clientWidth, canvas.clientHeight);\n//             })\n//         } else if (go.texture) {\n//             // Use the texture as normal\n//             let iw = go.texture.width;\n//             let ih = go.texture.height;\n//             // Use the Absolute Transform, if available\n//             let transform = go.absTransform ? go.absTransform : go.transform;\n//             let pos = transform.position;\n//             let scl = transform.scale;\n//             let rot = transform.rotation;\n            \n//             context.drawImage(go.texture, pos.x, pos.y, iw * scl.x, ih * scl.y);\n//         }\n//     })\n// }\n\n// Uses the Camera Object to perform calculations and rotations\nfunction renderGameObjectsWith2dContext(gos) {\n    context.setTransform(1,0,0,1,0,0);\n    context.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n    // Get the camera transform\n    let cam = null;\n    let root = gos[0]; // Generally the 1st object in the array\n    for (const go of gos) {\n        if (go.id === _constants_js__WEBPACK_IMPORTED_MODULE_2__.CAMERA_ID) {\n            cam = go.transform;\n            break;\n        }\n    }\n    if (!cam) {\n        cam = new _node_modules_jsge_core_src_Transform_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n    } else {\n\n    }\n    for (const go of gos) {\n        if (go.renderScripts) {\n            // Check if this is a Renderable G.O\n            go.renderScripts.forEach((rs) => {\n                rs.render(context, canvas.clientWidth, canvas.clientHeight, cam);\n            })\n        } else if (go.texture) {\n            let tex = null;\n            // Sometimes texture is a function\n            if (typeof go.texture === \"function\") {\n                tex = go.texture();\n            } else {\n                tex = go.texture;\n            }\n            // Use the texture as normal\n            let iw = tex.width;\n            let ih = tex.height;\n            // Use the Absolute Transform, if available\n            let transform = go.absTransform ? go.absTransform : go.transform;\n            let pos = transform.position;\n            let scl = transform.scale;\n            // @TODO Do rotation\n            let rot = transform.rotation;\n\n            // Use the old method if rotation is not present\n            if (!rot.x && !cam.rotation.x) {\n                context.drawImage(tex, pos.x - cam.position.x, pos.y - cam.position.y, iw * scl.x, ih * scl.y);\n            } else {\n                // Translate to position. Note, this is slower\n                context.setTransform(scl.x * cam.scale.x, 0, 0, scl.y * cam.scale.y, pos.x + (iw * 0.5 * scl.x) - cam.position.x, pos.y + (ih * 0.5 * scl.y) - cam.position.y);\n                context.rotate(deg2rad(rot.x + cam.rotation.x));\n                \n                context.drawImage(tex, (iw * -0.5), (ih * -0.5), iw, ih); // Draw such that the center of the image is on (0, 0)\n                context.setTransform(1,0,0,1,0,0); // Also rotates to 0\n                // context.rotate(0);\n            }\n        }\n    }\n    context.setTransform(1,0,0,1,0,0);\n}\n\n// END Legacy\n\n// new WebGL Context stuff\n\nfunction initializeWithWebGL() {\n    context = canvas.getContext('webgl');\n    if (!context) {\n        let msg = \"Browser Doesn't support WebGL!\";\n        console.error(msg);\n        throw new Error(msg)\n    }\n    (0,_Render_WebGLHelper_js__WEBPACK_IMPORTED_MODULE_3__.init)(context);\n}\n\nfunction renderGameObjectsWithWebGL(gos) {\n    // https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Adding_2D_content_to_a_WebGL_context\n}\n\n// Misc. Functions and Class definitions\n\nfunction deg2rad(deg) {\n    return (deg / 180) * Math.PI;\n}\n\nconst Renderable = (Base) => class extends Base {\n    constructor() {\n        super();\n        this.renderScripts = []; // Scripts to provide to the Renderer\n    }\n\n    attachScript(scr) {\n        super.attachScript(scr);\n        console.log(\"Attach Script:\", scr.constructor.name);\n        if (scr instanceof _Camera_RenderScript_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n            this.renderScripts.push(scr);\n        }\n    }\n\n    detachScript(scr) {\n        super.detachScript(scr);\n        console.log(\"Detach Script:\", scr.constructor.name);\n        if (scr instanceof _Camera_RenderScript_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]) {\n            for (let i = 0; i < this.renderScripts.length; i++) {\n                if (this.renderScripts[i].id === scr.id) {\n                    this.renderScripts.splice(i, 1);\n                    return;\n                }\n            }\n        }\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/Render.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/Render/WebGLHelper.js":
/*!***********************************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/Render/WebGLHelper.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"init\": () => (/* binding */ init)\n/* harmony export */ });\n/**\n * Contains helper functions for WebGL.\n */\n\nconst vsSource = `\n    attribute vec4 aVertexPosition;\n    attribute vec4 aVertexColor;\n\n    uniform mat4 uModelViewMatrix;\n    uniform mat4 uProjectionMatrix;\n\n    varying lowp vec4 vColor;\n\n    void main(void) {\n        gl_Position = uProjectionMatrix * uModelViewMatrix * aVertexPosition;\n        vColor = aVertexColor;\n    }\n`;\n\nconst fsSource = `\n    varying lowp vec4 vColor;\n\n    void main(void) {\n        gl_FragColor = vColor;\n    }\n`;\n\n// function importGlMatrix() {\n//     const path = \"/script/engine/Render/glMatrix.js\"\n\n//     let tag = document.createElement(\"script\");\n//     tag.src = path;\n//     document.head.appendChild(tag);\n// }\n// importGlMatrix();\n\n/**\n * Initialize Web GL stuff\n * @param {WebGLRenderingContext} gl Web GL Context\n */\nfunction init(gl) {\n    // Clear the Screen\n    // gl.clearColor(0, 0, 0, 1);\n    // gl.clearDepth(1.0);\n    // gl.depthFunc(gl.LEQUAL);\n    // gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    const shaderProgram = initShaderProgram(gl, vsSource, fsSource);\n\n    const programInfo = {\n        program: shaderProgram,\n        attribLocations: {\n            vertexPosition: gl.getAttribLocation(shaderProgram, 'aVertexPosition'),\n            vertexColor: gl.getAttribLocation(shaderProgram, 'aVertexColor'),\n        },\n        uniformLocations: {\n            projectionMatrix: gl.getUniformLocation(shaderProgram, 'uProjectionMatrix'),\n            modelViewMatrix: gl.getUniformLocation(shaderProgram, 'uModelViewMatrix'),\n        },\n    };\n\n    let buffers = initBuffers(gl);\n\n    drawScene(gl, programInfo, buffers);\n}\n\n//\n// Initialize a shader program, so WebGL knows how to draw our data\n//\nfunction initShaderProgram(gl, vsSource, fsSource) {\n    const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource);\n    const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource);\n\n    // Create the shader program\n\n    const shaderProgram = gl.createProgram();\n    gl.attachShader(shaderProgram, vertexShader);\n    gl.attachShader(shaderProgram, fragmentShader);\n    gl.linkProgram(shaderProgram);\n\n    // If creating the shader program failed, alert\n\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n        alert('Unable to initialize the shader program: ' + gl.getProgramInfoLog(shaderProgram));\n        return null;\n    }\n\n    return shaderProgram;\n}\n\n//\n// creates a shader of the given type, uploads the source and\n// compiles it.\n//\nfunction loadShader(gl, type, source) {\n    const shader = gl.createShader(type);\n\n    // Send the source to the shader object\n\n    gl.shaderSource(shader, source);\n\n    // Compile the shader program\n\n    gl.compileShader(shader);\n\n    // See if it compiled successfully\n\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n        alert('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(shader));\n        gl.deleteShader(shader);\n        return null;\n    }\n\n    return shader;\n}\n\nfunction initBuffers(gl) {\n\n    // Create a buffer for the square's positions.\n\n    const positionBuffer = gl.createBuffer();\n\n    // Select the positionBuffer as the one to apply buffer\n    // operations to from here out.\n\n    gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\n\n    // Now create an array of positions for the square.\n\n    // Note: This is where we define the coordinates for all on-screen objects\n    const positions = [\n        -1.0, 1.0,\n        1.0, 1.0,\n        -1.0, -1.0,\n        1.0, -1.0,\n    ];\n\n    // Now pass the list of positions into WebGL to build the\n    // shape. We do this by creating a Float32Array from the\n    // JavaScript array, then use it to fill the current buffer.\n\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(positions), gl.STATIC_DRAW);\n\n    const colors = [\n        1.0, 1.0, 1.0, 1.0,    // white\n        1.0, 0.0, 0.0, 1.0,    // red\n        0.0, 1.0, 0.0, 1.0,    // green\n        0.0, 0.0, 1.0, 1.0,    // blue\n    ];\n\n    const colorBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(colors), gl.STATIC_DRAW);\n\n    return {\n        position: positionBuffer,\n        color: colorBuffer,\n    };\n\n}\n\nfunction drawScene(gl, programInfo, buffers) {\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);  // Clear to black, fully opaque\n    gl.clearDepth(1.0);                 // Clear everything\n    gl.enable(gl.DEPTH_TEST);           // Enable depth testing\n    gl.depthFunc(gl.LEQUAL);            // Near things obscure far things\n\n    // Clear the canvas before we start drawing on it.\n\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    // Create a perspective matrix, a special matrix that is\n    // used to simulate the distortion of perspective in a camera.\n    // Our field of view is 45 degrees, with a width/height\n    // ratio that matches the display size of the canvas\n    // and we only want to see objects between 0.1 units\n    // and 100 units away from the camera.\n\n    const fieldOfView = 45 * Math.PI / 180;   // in radians\n    const aspect = gl.canvas.clientWidth / gl.canvas.clientHeight;\n    const zNear = 0.1;\n    const zFar = 100.0;\n    const projectionMatrix = mat4.create();\n\n    // note: glmatrix.js always has the first argument\n    // as the destination to receive the result.\n    mat4.perspective(projectionMatrix,\n        fieldOfView,\n        aspect,\n        zNear,\n        zFar);\n\n    // Set the drawing position to the \"identity\" point, which is\n    // the center of the scene.\n    const modelViewMatrix = mat4.create();\n\n    // Now move the drawing position a bit to where we want to\n    // start drawing the square.\n\n    mat4.translate(modelViewMatrix,     // destination matrix\n        modelViewMatrix,     // matrix to translate\n        [-0.0, 0.0, -6.0]);  // amount to translate\n\n    // Tell WebGL how to pull out the positions from the position\n    // buffer into the vertexPosition attribute\n    {\n        const numComponents = 2;\n        const type = gl.FLOAT;\n        const normalize = false;\n        const stride = 0;\n        const offset = 0;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffers.position);\n        gl.vertexAttribPointer(\n            programInfo.attribLocations.vertexPosition,\n            numComponents,\n            type,\n            normalize,\n            stride,\n            offset);\n        gl.enableVertexAttribArray(\n            programInfo.attribLocations.vertexPosition);\n    }\n\n    // Tell WebGL how to pull out the colors from the color buffer\n    // into the vertexColor attribute.\n    {\n        const numComponents = 4;\n        const type = gl.FLOAT;\n        const normalize = false;\n        const stride = 0;\n        const offset = 0;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffers.color);\n        gl.vertexAttribPointer(\n            programInfo.attribLocations.vertexColor,\n            numComponents,\n            type,\n            normalize,\n            stride,\n            offset);\n        gl.enableVertexAttribArray(\n            programInfo.attribLocations.vertexColor);\n    }\n\n    // Tell WebGL to use our program when drawing\n\n    gl.useProgram(programInfo.program);\n\n    // Set the shader uniforms\n\n    gl.uniformMatrix4fv(\n        programInfo.uniformLocations.projectionMatrix,\n        false,\n        projectionMatrix);\n    gl.uniformMatrix4fv(\n        programInfo.uniformLocations.modelViewMatrix,\n        false,\n        modelViewMatrix);\n\n    {\n        const offset = 0;\n        const vertexCount = 4;\n        gl.drawArrays(gl.TRIANGLE_STRIP, offset, vertexCount);\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/Render/WebGLHelper.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/SpriteSheet.js":
/*!****************************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/SpriteSheet.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SpriteSheet)\n/* harmony export */ });\n/**\n * Contains Sprites\n */\n\nclass SpriteSheet {\n    \n    constructor() {\n        this.image = new Image();\n        this.sheet = new Map();\n    }\n\n    // Use this if all of the sprites are the same dimensions\n    async importFromPath(fpath, width, height) {\n        let p = new Promise((res, rej) => {\n            if (fpath && width && height) {\n                this.image.src = fpath;\n                this.spriteWidth = width;\n                this.spriteHeight = height;\n                this.image.onload = generateSpriteSheet.bind(this, res, rej);\n                this.image.onerror = rej;\n            } else {\n                rej(\"Invalid parameters\");\n            }\n        });\n        this.ready = p;\n        return p;\n    }\n\n    // Alternate (more powerful) way to create the Sprite Sheet\n    async importFromOptions(options) {\n        let p = new Promise((res, rej) => {\n            if (options && options.path && options.contains && options.contains.length) {\n                this.image.src = options.path;\n                this.contains = options.contains;\n                this.image.onload = generateSpriteSheetWithOptions.bind(this, res, rej);\n                this.image.onerror = rej;\n                return this.ready;\n            } else {\n                rej(\"Invalid Options\");\n            }\n            });\n        this.ready = p;\n        return p;\n    }\n}\n\nfunction generateSpriteSheet(resolve, reject) {\n    let width = this.image.width;\n    let height = this.image.height;\n    let promises = [];\n    for (let h = 0; h < height; h += this.spriteHeight) {\n        for (let w = 0; w < width; w += this.spriteWidth) {\n            promises.push(createImageBitmap(this.image, w, h, this.spriteWidth, this.spriteHeight));\n        }\n    }\n    Promise.all(promises).then((sprites) => {\n        sprites.forEach((sprite, index) => {\n            this.sheet.set(index, sprite);\n        });\n        resolve();\n    });\n}\n\nfunction generateSpriteSheetWithOptions(resolve, reject) {\n    if (this.contains) {\n        let width = this.image.width;\n        let height = this.image.height;\n        let promises = [];\n        let keysOrder = [];\n        this.contains.forEach((item) => {\n            console.log(item);\n            if (item.name && item.x >= 0 && item.y >= 0 && item.width && item.height && item.scaleX && item.scaleY) {\n                promises.push(createImageBitmap(this.image, item.x, item.y, item.width, item.height));\n                keysOrder.push(item.name);\n            }\n        })\n        console.log(promises, this.contains);\n        Promise.all(promises).then((sprites) => {\n            sprites.forEach((sprite, index) => {\n                this.sheet.set(keysOrder[index], sprite);\n            });\n            resolve();\n        });\n    } else {\n        reject(new Error(\"No Options Supplied\"));\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/SpriteSheet.js?");

/***/ }),

/***/ "../../packages/jsge-module-graphics2d/src/constants.js":
/*!**************************************************************!*\
  !*** ../../packages/jsge-module-graphics2d/src/constants.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CAMERA_ID\": () => (/* binding */ CAMERA_ID)\n/* harmony export */ });\n/**\n * Contains constants\n */\n\nconst CAMERA_ID = \"camera_default\";\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-graphics2d/src/constants.js?");

/***/ }),

/***/ "../../packages/jsge-module-input/src/Input.js":
/*!*****************************************************!*\
  !*** ../../packages/jsge-module-input/src/Input.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TYPE_ANALOG\": () => (/* binding */ TYPE_ANALOG),\n/* harmony export */   \"TYPE_DIGITAL\": () => (/* binding */ TYPE_DIGITAL),\n/* harmony export */   \"cancelSetOnNextInput\": () => (/* binding */ cancelSetOnNextInput),\n/* harmony export */   \"defineKey\": () => (/* binding */ defineKey),\n/* harmony export */   \"getAllKeys\": () => (/* binding */ getAllKeys),\n/* harmony export */   \"getKeyState\": () => (/* binding */ getKeyState),\n/* harmony export */   \"initInput\": () => (/* binding */ initInput),\n/* harmony export */   \"jmod\": () => (/* binding */ jmod),\n/* harmony export */   \"pollGamepads\": () => (/* binding */ pollGamepads),\n/* harmony export */   \"setKey\": () => (/* binding */ setKey),\n/* harmony export */   \"setKeyOnNextInput\": () => (/* binding */ setKeyOnNextInput),\n/* harmony export */   \"setKeyState\": () => (/* binding */ setKeyState),\n/* harmony export */   \"setKeybindings\": () => (/* binding */ setKeybindings)\n/* harmony export */ });\n/**\n * Provides Input management for the Game Engine\n */\n\nconst keymap = {}; // Contains the mapping of keys to key names\nconst keystate = {}; // Contains the Key State\nconst keys = {}; // Contains the Key Type, and mapping\n\nconst TYPE_DIGITAL = 1; // Values are either 0 or 1\nconst TYPE_ANALOG = 2; // Values range from -1 to 1. Buttons can be mapped to + or - 1\n\nlet setOnNextInput = \"\"; // Set this key on next input\n\nlet setOnNextResolver = null;\nlet setOnNextRejector = null;\n\nlet gamepadConnected = 0;\nlet gamePadsBound = []; // Stores indicies of all gamepads bound. This is done for Chromium support\n\nconst jmod = {\n    name: \"Input\",\n    version: 0,\n    init: initInput,\n    loop: () => pollGamepads()\n}\n\nfunction initInput() {\n    // Chrome does Gamepads differently than Firefox\n    // @TODO implement Chrome-supported Gamepad API\n}\n\n// @TODO Function to bind key by name\nfunction setKey() {}\n\n// Set the Binding of a key for a keyboard\nfunction setKeyFromKbd(name, buttonID, buttonName) {\n    if (keys[name]) {\n        console.log(\"Key Set From Keyboard\", buttonID, buttonName);\n        if (!keymap['k']) keymap['k'] = {};\n        keymap['k'][buttonID] = name;\n        keystate[name] = 0;\n        let res = keys[name];\n        res.mapping = ['k', buttonID];\n        res.mappingName = buttonName;\n    }\n}\n\nfunction setKeyFromGamepad(name, deviceID, buttonID, axisID, axisPositive) {\n    if (keys[name]) {\n        if (!keymap[deviceID]) keymap[deviceID] = {};\n        if (!keymap[deviceID][0]) keymap[deviceID][0] = {};\n        if (!keymap[deviceID][1]) keymap[deviceID][1] = {};\n        let res = keys[name];\n        console.log(\"Key Set From Gamepad\", deviceID, buttonID, axisID);\n        if (res.type === TYPE_ANALOG) {\n            // Mapping for Buttons to Axis are handled entirely by the name\n            if (buttonID || buttonID === 0) {\n                // Button -> Axis\n                keymap[deviceID][0][buttonID] = name;\n                res.mapping = [deviceID, 0, buttonID];\n                res.mappingName = \"Button \" + buttonID;\n            } else if (axisID || axisID === 0) {\n                // Axis -> Axis\n                keymap[deviceID][1][axisID] = name;\n                res.mapping = [deviceID, 1, buttonID];\n                res.mappingName = \"Axis \" + buttonID;\n            }\n        } else {\n            // Mapping an Axis to a button is done by checking the direction of the axis\n            if (buttonID || buttonID === 0) {\n                // Button -> Button\n                keymap[deviceID][0][buttonID] = name;\n                res.mapping = [deviceID, 0, buttonID];\n                res.mappingName = \"Button \" + buttonID;\n            } else if (axisID || axisID === 0) {\n                // Axis -> Button\n                if (!keymap[deviceID][1][axisID] || Object.keys(keymap[deviceID][1][axisID]).length === 0) keymap[deviceID][1][axisID] = {};\n                if (axisPositive) {\n                    keymap[deviceID][1][axisID][\"pos\"] = name;\n                    res.mapping = [deviceID, 1, buttonID, \"pos\"];\n                } else {\n                    keymap[deviceID][1][axisID][\"neg\"] = name;\n                    res.mapping = [deviceID, 1, buttonID, \"neg\"];\n                }\n                res.mappingName = \"Axis \" + buttonID + (axisPositive ? \"+\" : \"-\");\n                console.log(keymap[deviceID])\n            }\n        }\n        keystate[name] = 0;\n    }\n}\n\n// Gets state of a key\nfunction getKeyState(name) {\n    return keystate[name];\n}\n\n// Defines a new key\nfunction defineKey(name, type) {\n    keystate[name] = 0;\n    keys[name] = {};\n    keys[name].type = type;\n}\n\n// Get Information and state of all keys. Useful for a set key screen, or saving key bindings\nfunction getAllKeys() {\n    let toRet = {};\n    console.log(\"Keymap:\", keymap);\n    console.log(\"Keystate:\", keystate);\n    console.log(\"keys:\", keys);\n    Object.keys(keys).forEach((key) => {\n        toRet[key] = {};\n        toRet[key].state = keystate[key];\n        toRet[key].mapping = keys[key].mapping;\n        toRet[key].mappingName = keys[key].mappingName;\n        toRet[key].type = keys[key].type;\n    });\n    return toRet;\n}\n\n// Sets Keybindings from a saved Object\nfunction setKeybindings(keyBindingObj) {\n    if (!keyBindingObj) return;\n    Object.keys(keyBindingObj).forEach((key) => {\n        let curr = keyBindingObj[key];\n        keys[key] = {};\n        keys[key].type = curr.type;\n        keys[key].mapping = curr.mapping;\n        keys[key].mappingName = curr.mappingName;\n        console.log(curr.mapping)\n        // @TODO Make this work with Gamepads\n        if (curr.mapping && curr.mapping.length) {\n            let m = curr.mapping; // [DeviceID, ButtonID]\n            if (!keymap[m[0]] || !Object.keys(keymap[m[0]])) {\n                keymap[m[0]] = {};\n            }\n            keymap[m[0]][m[1]] = key;\n        }\n        keystate[key] = 0;\n    })\n}\n\n// Sets the next key or button press to the specified name\nfunction setKeyOnNextInput(name) {\n    setOnNextInput = name;\n    return new Promise((res, rej) => {\n        setOnNextResolver = res;\n        setOnNextRejector = rej;\n    });\n}\n\nfunction cancelSetOnNextInput() {\n    setOnNextRejector(\"Set Event Cancelled\");\n    setOnNextResolver = null;\n    setOnNextInput = \"\";\n    setOnNextRejector = null;\n}\n\nfunction setKeyState(name, state) {\n    keystate[name] = state;\n}\n\nwindow.addEventListener('keydown', (event) => {\n    let code = event.keyCode;\n    let name = event.key;\n\n    if (setOnNextInput && setOnNextResolver) {\n        // Note: Handle Settings Axes by giving the correct name to set with the (+/-)\n        setKeyFromKbd(setOnNextInput, code, name);\n        setOnNextResolver(code);\n        setKeyOnNextInput = \"\";\n        setOnNextRejector = null;\n        setOnNextResolver = null;\n    } else if (keymap['k'] && keymap['k'][code]) {\n        let name = keymap['k'][code];\n        if (keys[name].type === TYPE_ANALOG) {\n            // Check for the + or -\n            if (name.charAt(name.length() - 1) === \"-\") {\n                keystate[name.substring(0, name.length())] = -1;\n            } else {\n                keystate[name.substring(0, name.length())] = 1;\n            }\n        } else {\n            keystate[name] = 1;\n        }\n    }\n});\n\nwindow.addEventListener('keyup', (event) => {\n    let code = event.keyCode;\n    if (keymap['k'] && keymap['k'][code]) {\n        keystate[keymap['k'][code]] = 0;\n    }\n});\n\nwindow.addEventListener(\"gamepadconnected\", (e) => {\n    gamepadConnected += 1;\n    gamePadsBound.push(e.gamepad.index);\n    console.log(\"Gamepad Connected:\", e);\n});\n\nwindow.addEventListener(\"gamepaddisconnected\", (e) => {\n    gamepadConnected -= 1;\n    let idx = gamePadsBound.indexOf(e.gamepad.index);\n    if (idx >= 0) {\n        delete gamePadsBound[idx];\n    }\n    console.log(\"Gamepad Disconnected:\", e);\n});\n\n// Polls the state of the gamepads. Do this every frame.\nfunction pollGamepads() {\n    if (gamepadConnected <= 0) {\n        return;\n    }\n\n    // Note: Chrome doesn't provide indicies for this. Use Index to get the gamepad\n    let gamepads = navigator.getGamepads(); // @TODO For legacy purposes, implement the webkit-prefixed version of this\n\n    if (gamepads.length === 0 || gamePadsBound.length === 0) {\n        return;\n    }\n\n    // console.log(gamepads);\n\n    if (setOnNextInput && setOnNextResolver) {\n        // Set an input\n        for (let i = 0; i < gamepads.length; i++) {\n            let gp = gamepads[i];\n            if (gp.buttons) {\n                // Buttons are stored by index\n                for (let j = 0; j < gp.buttons.length; j++) {\n                    let btn = gp.buttons[j];\n                    if (btn.pressed) {\n                        // Note: Handle Settings Axes by giving the correct name to set with the (+/-)\n                        // if (!keymap[gp.id]) keymap[gp.id] = {};\n                        // if (!keymap[gp.id][0]) keymap[gp.id][0] = {};\n                        // keymap[gp.id][0][j] = setOnNextInput;\n                        // setKey(setOnNextInput, gp.id, j, \"Button \" + j);\n                        setKeyFromGamepad(setOnNextInput, gp.id, j);\n                        setOnNextResolver(j);\n                        setKeyOnNextInput = \"\";\n                        setOnNextRejector = null;\n                        setOnNextResolver = null;\n                        return;\n                    }\n                }\n            }\n            // Axes also stored by index\n            if (gp.axes) {\n                for (let j = 0; j < gp.axes.length; j++) {\n                    let axis = gp.axes[j];\n                    // @TODO Check MArgin of Error\n                    if (axis !== 0) {\n                        setKeyFromGamepad(setOnNextInput, gp.id, null, j, axis > 0);\n                        setOnNextResolver(j);\n                        setKeyOnNextInput = \"\";\n                        setOnNextRejector = null;\n                        setOnNextResolver = null;\n                        return;\n                    }\n                }\n            }\n        }\n    } else {\n        // Look for input\n        for (let i = 0; i < gamepads.length; i++) {\n            let gp = gamepads[i];\n            if (keymap[gp.id]) {\n                // Check For Mapped Buttons\n                if (keymap[gp.id][0] && gp.buttons) {\n                    for (let j = 0; j < gp.buttons.length; j++) {\n                        let btn = gp.buttons[j];\n                        // Buttons stored under keymap[<ID>][0]\n                        if (keymap[gp.id][0][j]) {\n                            let name = keymap[gp.id][0][j];\n                            // Get Type of Button\n                            let keytype = keys[name].type;\n                            if (btn.pressed) {\n                                // For Analog AXIS types, allow binding buttons to +/- 1 values\n                                if (keytype === TYPE_ANALOG) {\n                                    if (name.charAt(name.length - 1) === \"-\") {\n                                        keystate[name.substring(0, name.length - 1)] = -1;\n                                    } else {\n                                        keystate[name.substring(0, name.length - 1)] = 1;\n                                    }\n                                } else {\n                                    keystate[name] = 1;\n                                }\n                            } else {\n                                // Reset Button if not pressed\n                                if (keytype === TYPE_ANALOG) {\n                                    keystate[name.substring(0, name.length() - 1)] = 0;\n                                } else {\n                                    keystate[name] = 0;\n                                }\n                            }\n                        }\n                    }\n                }\n                // Check for Mapped Axes\n                if (keymap[gp.id][1] && gp.axes) {\n                    for (let j = 0; j < gp.axes.length; j++) {\n                        let axis = gp.axes[j];\n                        let axisSetting = keymap[gp.id][1][j]; // Either a keyname, or Object\n                        if (axisSetting) {\n                            // @TODO Check Dead Zone\n                            if (axis === 0) {\n                                // Reset Buttons back to 0\n                                if (axisSetting.pos || axisSetting.neg) {\n                                    if (axisSetting.pos) {\n                                        keystate[axisSetting.pos] = 0;\n                                    }\n                                    if (axisSetting.neg) {\n                                        keystate[axisSetting.neg] = 0;\n                                    }\n                                } else {\n                                    keystate[axisSetting] = 0;\n                                }\n                            } else {\n                                // Axis has a value\n                                if (axisSetting.pos || axisSetting.neg) {\n                                    // This is an axis bound to a button\n                                    if (axis > 0 && axisSetting.pos) {\n                                        keystate[axisSetting.pos] = 1;\n                                        if (axisSetting.neg) {\n                                            keystate[axisSetting.neg] = 0;\n                                        }\n                                    } else if (axis < 0 && axisSetting.neg) {\n                                        keystate[axisSetting.neg] = 1;\n                                        if (axisSetting.pos) {\n                                            keystate[axisSetting.pos] = 0;\n                                        }\n                                    }\n                                } else {\n                                    // Axis to Axis\n                                    keystate[axisSetting] = axis;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n}\n\n//@TODO finish this (Add Mouse Support)\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-input/src/Input.js?");

/***/ }),

/***/ "../../packages/jsge-module-networking/src/Network/RoomController.js":
/*!***************************************************************************!*\
  !*** ../../packages/jsge-module-networking/src/Network/RoomController.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createRoom\": () => (/* binding */ createRoom),\n/* harmony export */   \"getRooms\": () => (/* binding */ getRooms)\n/* harmony export */ });\n/**\n * Communicates with the Rooms API part of the Websocket Server\n */\n\nasync function createRoom(baseURL, payload) {\n    console.log(payload)\n    const resp = await fetch(`${baseURL}/api/rooms`, {\n        method: \"POST\",\n        mode: \"cors\",\n        headers: {\n            'Content-Type': \"application/json\"\n        },\n        body: JSON.stringify(payload)\n    });\n    return resp.json();\n}\n\nasync function getRooms(baseURL) {\n    const resp = await fetch(`${baseURL}/api/rooms`, {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n            'Content-Type': \"application/json\"\n        }\n    });\n    console.log(resp.body);\n    let json = await resp.json();\n\n    if (json.dataset) {\n        return json.dataset;\n    } else {\n        return json;\n    }\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-networking/src/Network/RoomController.js?");

/***/ }),

/***/ "../../packages/jsge-module-networking/src/Puppeteer.js":
/*!**************************************************************!*\
  !*** ../../packages/jsge-module-networking/src/Puppeteer.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Puppet\": () => (/* binding */ Puppet),\n/* harmony export */   \"checkPuppets\": () => (/* binding */ checkPuppets),\n/* harmony export */   \"connect\": () => (/* binding */ connect),\n/* harmony export */   \"convertInstanceIntoPuppet\": () => (/* binding */ convertInstanceIntoPuppet),\n/* harmony export */   \"convertPuppetIntoInstance\": () => (/* binding */ convertPuppetIntoInstance),\n/* harmony export */   \"disablePuppetUpdates\": () => (/* binding */ disablePuppetUpdates),\n/* harmony export */   \"disconnect\": () => (/* binding */ disconnect),\n/* harmony export */   \"jmod\": () => (/* binding */ jmod)\n/* harmony export */ });\n/* harmony import */ var _node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../node_modules/jsge-core/src/Serialize.js */ \"../../packages/jsge-core/src/Serialize.js\");\n/* harmony import */ var _node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../node_modules/jsge-core/src/Engine.js */ \"../../packages/jsge-core/src/Engine.js\");\n/**\n * Puppeteer is responsible for syncing the state of a GameObject across a network connection\n */\n\n// import { serialize, deserialize, update, getConstructor } from './Serialize.js';\n// import { enrollGameObject, deleteGameObject } from './Engine.js';\n\n\n\n\nconst minFrames = 2;\nconst defaultFrames = 15;\nlet defaultUpdateFrames = 5; // Default frame delta to update everything. Will be set by Puppeteer when testing the connection\n\nconst puppets = {};\nlet puppeteerActive = false;\nlet ws = null;\n\n// Keys to remove then converting back to an instance\nconst puppetKeys = [\n    \"isPuppet\",\n    \"master\",\n    \"loopsSinceLastUpdate\",\n    \"updateFrames\",\n    \"updateCounter\",\n    \"puppeteerDisabled\"\n];\n\n/**\n * Defines a Puppet\n * @param {Class} Base Base Class to convert into a Puppet\n * @param {Boolean} master True if this is the master \n * @param {Number} updateFrames Number of frames to update after\n */\nconst Puppet = (Base, master, updateFrames) => class extends Base {\n    constructor(...params) {\n        super(...params);\n\n        // Private\n        this.isPuppet = true; // Key for GameObjects to look at for checking whether or not it is a Puppet\n        this.master = master || false; // If True, this the state will be sent from this Puppet to the remote ones\n        this.loopsSinceLastUpdate = 0; // Count the loops since the last update\n        this.updateFrames = updateFrames || defaultUpdateFrames;\n        this.updateCounter = 0; // Number included with the update to distinguish updates from one another\n        this.puppeteerDisabled = false; // True if the puppeteer should not send or recieve updates for this GameObject\n\n        // Change GameObject Settings, since it will inherit the state of a remote GameObject\n        if (!this.master) {\n            this.priority = 0;\n            this.id = \"\";\n        }\n    }\n\n    init() {\n        console.log(\"Puppet Init\");\n        super.init();\n        enrollPuppet(this);\n    }\n\n    // True when this Puppet needs an update\n    needsUpdate() {\n        return !this.puppeteerDisabled && this.loopsSinceLastUpdate > this.updateFrames;\n    }\n\n    // Gets Update ID Number, and increments\n    getUpdateNumber() {\n        return this.updateCounter++;\n    }\n\n    // Get the current State of the Master Puppet\n    getState() {\n        this.loopsSinceLastUpdate = 0;\n        return (0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.serialize)(this, false, super.constructor.name);\n    }\n\n    // Set the current state of the slave puppet\n    updateState(state) {\n        this.loopsSinceLastUpdate = 0;\n        return (0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.update)(this, state, super.constructor.name);\n    }\n\n    loop() {\n        this.loopsSinceLastUpdate++;\n        if (super.loop) {\n            super.loop();\n        }\n    }\n\n    onDestroy() {\n        removePuppet(this);\n        super.onDestroy();\n    }\n}\n\n// Enrolls a puppet into Puppeteer\nfunction enrollPuppet(obj) {\n    if (obj.id) {\n        puppets[obj.id] = obj;\n        // Send an update\n        ws.send(JSON.stringify({\n            action: \"create\",\n            target: \"*\",\n            id: obj.id,\n            number: obj.getUpdateNumber(),\n            data: obj.getState()\n        }));\n    }\n}\n\nfunction removePuppet(obj) {\n    if (obj.id && puppets[obj.id]) {\n        delete puppets[obj.id];\n        // Send a Delete Event\n        ws.send(JSON.stringify({\n            action: \"delete\",\n            target: \"*\",\n            id: obj.id,\n            data: obj.id,\n            number: obj.getUpdateNumber()\n        }));\n    }\n}\n\n// Converts an instance into a Puppet, and enrolls it as a master object\nfunction convertInstanceIntoPuppet(instance) {\n    if (!instance) return null;\n    if (instance instanceof Puppet) return instance;\n    let prevState = Reflect.ownKeys(instance);\n    let toRet = new Puppet(instance.constructor, true);\n    Reflect.apply(toRet, prevState);\n    enrollPuppet(toRet);\n    return toRet;\n}\n\n// Converts a Puppet back into its' original instance type, and removes it from the Puppeteer\nfunction convertPuppetIntoInstance(puppet) {\n    if (!puppet) return null;\n    if (!puppet instanceof Puppet) return puppet;\n    let prevState = Reflect.ownKeys(puppet);\n    let toRet = new puppet.super.contructor();\n    Reflect.apply(toRet, prevState);\n    // Remove Puppeteer Keys\n    puppetKeys.forEach((key) => {\n        if (toRet[key]) {\n            delete toRet[key];\n        }\n    });\n    removePuppet(puppet);\n    return toRet;\n}\n\n// Disables the puppet from receiving updates from a remote instance, or prevents a master puppet from sending updates\nfunction disablePuppetUpdates(instance) {\n    if (!instance) return null;\n    if (!instance instanceof Puppet) return instance;\n    instance.puppeteerDisabled = true;\n    return instance;\n}\n\n// Connect to a PubSub component to receive updates\nfunction connect(url) {\n    console.log(\"Connecting\");\n    try {\n        ws = new WebSocket(url);\n        console.log(\"Connected to \" + url + \" Successfully!\");\n        puppeteerActive = true;\n    } catch (error) {\n        puppeteerActive = false;\n        console.error(\"Error:\", error);\n        return;\n    }\n    ws.onmessage = (msg) => {\n        if (msg) {\n            let parsed = null;\n            try {\n                parsed = JSON.parse(msg.data);\n            } catch (e) {\n                console.log(\"NOT JSON:\", msg.data);\n                return;\n            }\n            // @TODO Check for Message type (update, delete, etc.)\n            if (parsed.data && parsed.data.data && parsed.data.data.id) {\n                if (puppets[parsed.data.data.id]) {\n                    console.log(\"Update State\");\n                    puppets[parsed.data.data.id].updateState(parsed.data);\n                } else {\n                    console.log(\"Adding new GameObject\", parsed.data);\n                    let constructor = (0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.getConstructor)(parsed.data.type);\n                    let instance = new (Puppet(constructor, false))();\n                    let deser = (0,_node_modules_jsge_core_src_Serialize_js__WEBPACK_IMPORTED_MODULE_0__.update)(instance, parsed.data);\n                    puppets[deser.id] = deser;\n                    (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.enrollGameObject)(deser);\n                }\n            } else {\n                console.log(\"No Data\");\n            }\n        } else {\n            console.log(\"No MSG\");\n        }\n    }\n}\n\n// Close the Websocket\nfunction disconnect() {\n    if (!ws) return;\n    ws.close();\n    puppeteerActive = false;\n    // Destroy all non-master puppets\n    Object.keys(puppets).forEach((key) => {\n        if (puppets[key] && puppets[key].master) {\n            // This is a master state and needs to be downgraded\n            // @TODO Add a 'on-disconnect' event handler\n        } else {\n            // This is remotely controlled and should be deleted\n            (0,_node_modules_jsge_core_src_Engine_js__WEBPACK_IMPORTED_MODULE_1__.deleteGameObject)(puppets[key]);\n        }\n    })\n}\n\n// Called every frame to update the puppets\nfunction checkPuppets() {\n    if (!puppeteerActive) {\n        return;\n    }\n    Object.keys(puppets).forEach((key) => {\n        if (puppets[key].master && puppets[key].needsUpdate()) {\n            ws.send(JSON.stringify({\n                action: \"update\",\n                target: \"*\",\n                id: puppets[key].id,\n                number: puppets[key].getUpdateNumber(),\n                data: puppets[key].getState()\n                // @TODO Add owner options here\n            }));\n        }\n    })\n}\n\nconst jmod = {\n    name: \"Puppeteer\",\n    version: 0,\n    loop: () => checkPuppets()\n}\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-networking/src/Puppeteer.js?");

/***/ }),

/***/ "../../packages/jsge-module-audio/node_modules/nanoid/index.browser.js":
/*!*****************************************************************************!*\
  !*** ../../packages/jsge-module-audio/node_modules/nanoid/index.browser.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"customAlphabet\": () => (/* binding */ customAlphabet),\n/* harmony export */   \"customRandom\": () => (/* binding */ customRandom),\n/* harmony export */   \"nanoid\": () => (/* binding */ nanoid),\n/* harmony export */   \"random\": () => (/* binding */ random),\n/* harmony export */   \"urlAlphabet\": () => (/* reexport safe */ _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__.urlAlphabet)\n/* harmony export */ });\n/* harmony import */ var _url_alphabet_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./url-alphabet/index.js */ \"../../packages/jsge-module-audio/node_modules/nanoid/url-alphabet/index.js\");\n\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\n\n\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-audio/node_modules/nanoid/index.browser.js?");

/***/ }),

/***/ "../../packages/jsge-module-audio/node_modules/nanoid/url-alphabet/index.js":
/*!**********************************************************************************!*\
  !*** ../../packages/jsge-module-audio/node_modules/nanoid/url-alphabet/index.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"urlAlphabet\": () => (/* binding */ urlAlphabet)\n/* harmony export */ });\nlet urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\n\n\n\n//# sourceURL=webpack://my-webpack-project/../../packages/jsge-module-audio/node_modules/nanoid/url-alphabet/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/main.js");
/******/ 	
/******/ })()
;